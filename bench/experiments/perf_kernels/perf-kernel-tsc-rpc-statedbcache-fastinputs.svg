<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="354" onload="init(evt)" viewBox="0 0 1200 354" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="354.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="337" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="337" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>end_to_end_benc (20,699 samples, 100.00%)</title><rect x="10.0" y="289" width="1180.0" height="15.0" fill="rgb(225,2,51)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >end_to_end_benc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_dl_sysdep_start (2 samples, 0.01%)</title><rect x="1189.4" y="241" width="0.1" height="15.0" fill="rgb(230,10,40)" rx="2" ry="2" />
<text text-anchor="" x="1192.37" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clear_user (2 samples, 0.01%)</title><rect x="1189.8" y="177" width="0.1" height="15.0" fill="rgb(235,197,29)" rx="2" ry="2" />
<text text-anchor="" x="1192.83" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_handler&lt;void  (130 samples, 0.63%)</title><rect x="10.3" y="193" width="7.5" height="15.0" fill="rgb(236,159,7)" rx="2" ry="2" />
<text text-anchor="" x="13.34" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::shared_ptr&lt;clipper::Timer&gt;, std::allocator&lt;std::shared_ptr&lt;clipper::Timer&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::shared_ptr&lt;clipper::Timer&gt; &gt; (15 samples, 0.07%)</title><rect x="1187.3" y="161" width="0.8" height="15.0" fill="rgb(237,12,44)" rx="2" ry="2" />
<text text-anchor="" x="1190.26" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (2 samples, 0.01%)</title><rect x="1188.9" y="193" width="0.1" height="15.0" fill="rgb(227,85,47)" rx="2" ry="2" />
<text text-anchor="" x="1191.86" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (4 samples, 0.02%)</title><rect x="1182.6" y="33" width="0.2" height="15.0" fill="rgb(210,103,19)" rx="2" ry="2" />
<text text-anchor="" x="1185.59" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (4 samples, 0.02%)</title><rect x="1189.0" y="177" width="0.2" height="15.0" fill="rgb(212,139,16)" rx="2" ry="2" />
<text text-anchor="" x="1191.97" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::RPCService::manage_service (81 samples, 0.39%)</title><rect x="19.2" y="209" width="4.6" height="15.0" fill="rgb(233,51,21)" rx="2" ry="2" />
<text text-anchor="" x="22.18" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DefaultOutputSelectionState::DefaultOutputSelectionState (20,318 samples, 98.16%)</title><rect x="24.7" y="161" width="1158.2" height="15.0" fill="rgb(223,39,1)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::DefaultOutputSelectionState::DefaultOutputSelectionState</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sysmalloc (2 samples, 0.01%)</title><rect x="1188.0" y="97" width="0.1" height="15.0" fill="rgb(238,4,47)" rx="2" ry="2" />
<text text-anchor="" x="1191.00" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (5 samples, 0.02%)</title><rect x="1189.0" y="209" width="0.3" height="15.0" fill="rgb(243,32,2)" rx="2" ry="2" />
<text text-anchor="" x="1191.97" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::EndObject (20,312 samples, 98.13%)</title><rect x="24.7" y="97" width="1157.9" height="15.0" fill="rgb(244,106,20)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::EndObject</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memset_avx2 (21 samples, 0.10%)</title><rect x="1183.3" y="97" width="1.2" height="15.0" fill="rgb(233,75,52)" rx="2" ry="2" />
<text text-anchor="" x="1186.33" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ev_invoke_pending (2 samples, 0.01%)</title><rect x="18.1" y="193" width="0.1" height="15.0" fill="rgb(250,60,49)" rx="2" ry="2" />
<text text-anchor="" x="21.10" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::pattern_formatter::format (6 samples, 0.03%)</title><rect x="18.5" y="193" width="0.3" height="15.0" fill="rgb(215,117,52)" rx="2" ry="2" />
<text text-anchor="" x="21.49" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redox::Command&lt;redisReply*&gt;::processReply (2 samples, 0.01%)</title><rect x="18.1" y="161" width="0.1" height="15.0" fill="rgb(222,161,21)" rx="2" ry="2" />
<text text-anchor="" x="21.10" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>load_elf_binary (3 samples, 0.01%)</title><rect x="1189.8" y="209" width="0.2" height="15.0" fill="rgb(240,134,51)" rx="2" ry="2" />
<text text-anchor="" x="1192.83" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::thread::_M_start_thread (2 samples, 0.01%)</title><rect x="1189.7" y="209" width="0.1" height="15.0" fill="rgb(225,178,37)" rx="2" ry="2" />
<text text-anchor="" x="1192.71" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::collectAny&lt;__gnu_cxx::__normal_iterator&lt;folly::Future&lt;folly::Unit&gt;*, std::vector&lt;folly::Future&lt;folly::Unit&gt;, std::allocator&lt;folly::Future&lt;folly::Unit&gt; &gt; &gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="1188.6" y="177" width="0.1" height="15.0" fill="rgb(211,109,20)" rx="2" ry="2" />
<text text-anchor="" x="1191.57" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (5 samples, 0.02%)</title><rect x="1189.5" y="241" width="0.3" height="15.0" fill="rgb(220,132,29)" rx="2" ry="2" />
<text text-anchor="" x="1192.54" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_dl_start_user (2 samples, 0.01%)</title><rect x="1189.4" y="273" width="0.1" height="15.0" fill="rgb(253,107,33)" rx="2" ry="2" />
<text text-anchor="" x="1192.37" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (20,312 samples, 98.13%)</title><rect x="24.7" y="49" width="1157.9" height="15.0" fill="rgb(212,20,37)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_int_malloc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (5 samples, 0.02%)</title><rect x="1189.0" y="193" width="0.3" height="15.0" fill="rgb(224,40,50)" rx="2" ry="2" />
<text text-anchor="" x="1191.97" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="18.7" y="97" width="0.1" height="15.0" fill="rgb(221,86,20)" rx="2" ry="2" />
<text text-anchor="" x="21.72" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (7 samples, 0.03%)</title><rect x="19.3" y="145" width="0.4" height="15.0" fill="rgb(232,54,52)" rx="2" ry="2" />
<text text-anchor="" x="22.29" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memcpy_avx_unaligned (116 samples, 0.56%)</title><rect x="10.5" y="129" width="6.6" height="15.0" fill="rgb(209,176,8)" rx="2" ry="2" />
<text text-anchor="" x="13.51" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::details::async_log_helper::worker_loop (12 samples, 0.06%)</title><rect x="18.5" y="225" width="0.7" height="15.0" fill="rgb(241,226,13)" rx="2" ry="2" />
<text text-anchor="" x="21.49" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (2 samples, 0.01%)</title><rect x="1189.0" y="129" width="0.1" height="15.0" fill="rgb(241,218,39)" rx="2" ry="2" />
<text text-anchor="" x="1191.97" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="1188.5" y="145" width="0.1" height="15.0" fill="rgb(218,218,27)" rx="2" ry="2" />
<text text-anchor="" x="1191.46" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;::Malloc (20,312 samples, 98.13%)</title><rect x="24.7" y="81" width="1157.9" height="15.0" fill="rgb(234,47,5)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;::Malloc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>realloc (4 samples, 0.02%)</title><rect x="1182.6" y="65" width="0.2" height="15.0" fill="rgb(240,148,40)" rx="2" ry="2" />
<text text-anchor="" x="1185.59" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TaskExecutor::on_container_ready (130 samples, 0.63%)</title><rect x="10.3" y="177" width="7.5" height="15.0" fill="rgb(238,145,24)" rx="2" ry="2" />
<text text-anchor="" x="13.34" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (4 samples, 0.02%)</title><rect x="1188.2" y="145" width="0.2" height="15.0" fill="rgb(231,102,33)" rx="2" ry="2" />
<text text-anchor="" x="1191.18" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (3 samples, 0.01%)</title><rect x="1188.6" y="161" width="0.1" height="15.0" fill="rgb(252,123,24)" rx="2" ry="2" />
<text text-anchor="" x="1191.57" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (20,312 samples, 98.13%)</title><rect x="24.7" y="65" width="1157.9" height="15.0" fill="rgb(205,3,36)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >malloc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (7 samples, 0.03%)</title><rect x="19.3" y="161" width="0.4" height="15.0" fill="rgb(214,22,10)" rx="2" ry="2" />
<text text-anchor="" x="22.29" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (6 samples, 0.03%)</title><rect x="24.3" y="193" width="0.4" height="15.0" fill="rgb(215,106,11)" rx="2" ry="2" />
<text text-anchor="" x="27.31" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>new_heap (3 samples, 0.01%)</title><rect x="17.9" y="97" width="0.2" height="15.0" fill="rgb(247,7,27)" rx="2" ry="2" />
<text text-anchor="" x="20.92" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sysmalloc (5 samples, 0.02%)</title><rect x="17.1" y="113" width="0.3" height="15.0" fill="rgb(254,209,39)" rx="2" ry="2" />
<text text-anchor="" x="20.13" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TaskExecutor::TaskExecutor (2 samples, 0.01%)</title><rect x="18.1" y="113" width="0.1" height="15.0" fill="rgb(243,182,4)" rx="2" ry="2" />
<text text-anchor="" x="21.10" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>return_from_execve (3 samples, 0.01%)</title><rect x="1189.8" y="273" width="0.2" height="15.0" fill="rgb(250,4,22)" rx="2" ry="2" />
<text text-anchor="" x="1192.83" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (3 samples, 0.01%)</title><rect x="19.0" y="113" width="0.2" height="15.0" fill="rgb(237,180,3)" rx="2" ry="2" />
<text text-anchor="" x="22.01" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_execve (3 samples, 0.01%)</title><rect x="1189.8" y="257" width="0.2" height="15.0" fill="rgb(211,17,44)" rx="2" ry="2" />
<text text-anchor="" x="1192.83" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DefaultOutputSelectionState::deserialize (20,318 samples, 98.16%)</title><rect x="24.7" y="145" width="1158.2" height="15.0" fill="rgb(213,129,47)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::DefaultOutputSelectionState::deserialize</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start_thread (20,680 samples, 99.91%)</title><rect x="10.3" y="257" width="1179.0" height="15.0" fill="rgb(240,116,49)" rx="2" ry="2" />
<text text-anchor="" x="13.34" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >start_thread</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::detail::task_shared_state&lt;std::_Bind&lt;std::function&lt;void  (130 samples, 0.63%)</title><rect x="10.3" y="209" width="7.5" height="15.0" fill="rgb(216,226,1)" rx="2" ry="2" />
<text text-anchor="" x="13.34" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::BasicFormatter&lt;char, fmt::ArgFormatter&lt;char&gt; &gt;::format (3 samples, 0.01%)</title><rect x="18.7" y="161" width="0.1" height="15.0" fill="rgb(246,189,0)" rx="2" ry="2" />
<text text-anchor="" x="21.67" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="1182.8" y="65" width="0.1" height="15.0" fill="rgb(222,61,18)" rx="2" ry="2" />
<text text-anchor="" x="1185.82" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::Buffer&lt;char&gt;::append&lt;char&gt; (3 samples, 0.01%)</title><rect x="18.7" y="145" width="0.1" height="15.0" fill="rgb(245,210,53)" rx="2" ry="2" />
<text text-anchor="" x="21.67" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_handler&lt;void  (2 samples, 0.01%)</title><rect x="18.1" y="145" width="0.1" height="15.0" fill="rgb(212,83,22)" rx="2" ry="2" />
<text text-anchor="" x="21.10" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>repeatedly_report_and_clear_metrics (5 samples, 0.02%)</title><rect x="18.2" y="225" width="0.3" height="15.0" fill="rgb(248,226,40)" rx="2" ry="2" />
<text text-anchor="" x="21.21" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redisProcessCallbacks (2 samples, 0.01%)</title><rect x="18.1" y="177" width="0.1" height="15.0" fill="rgb(212,58,36)" rx="2" ry="2" />
<text text-anchor="" x="21.10" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::Buffer&lt;char&gt;::append&lt;char&gt; (6 samples, 0.03%)</title><rect x="18.8" y="177" width="0.4" height="15.0" fill="rgb(205,55,28)" rx="2" ry="2" />
<text text-anchor="" x="21.84" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (3 samples, 0.01%)</title><rect x="1188.6" y="129" width="0.1" height="15.0" fill="rgb(246,7,9)" rx="2" ry="2" />
<text text-anchor="" x="1191.57" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (5 samples, 0.02%)</title><rect x="17.1" y="145" width="0.3" height="15.0" fill="rgb(233,198,12)" rx="2" ry="2" />
<text text-anchor="" x="20.13" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__tz_convert (3 samples, 0.01%)</title><rect x="18.5" y="177" width="0.2" height="15.0" fill="rgb(239,5,5)" rx="2" ry="2" />
<text text-anchor="" x="21.49" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="1188.0" y="129" width="0.1" height="15.0" fill="rgb(249,32,6)" rx="2" ry="2" />
<text text-anchor="" x="1191.00" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>run_benchmark (5 samples, 0.02%)</title><rect x="1189.5" y="225" width="0.3" height="15.0" fill="rgb(211,54,37)" rx="2" ry="2" />
<text text-anchor="" x="1192.54" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_dl_start (2 samples, 0.01%)</title><rect x="1189.4" y="257" width="0.1" height="15.0" fill="rgb(246,129,13)" rx="2" ry="2" />
<text text-anchor="" x="1192.37" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DoubleVector::serialize (116 samples, 0.56%)</title><rect x="10.5" y="145" width="6.6" height="15.0" fill="rgb(206,151,20)" rx="2" ry="2" />
<text text-anchor="" x="13.51" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::PredictionCache::fetch (21 samples, 0.10%)</title><rect x="1183.3" y="161" width="1.2" height="15.0" fill="rgb(251,128,40)" rx="2" ry="2" />
<text text-anchor="" x="1186.33" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_create@@GLIBC_2.2.5 (2 samples, 0.01%)</title><rect x="1189.7" y="193" width="0.1" height="15.0" fill="rgb(206,112,49)" rx="2" ry="2" />
<text text-anchor="" x="1192.71" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redox::Redox::runEventLoop (5 samples, 0.02%)</title><rect x="17.9" y="225" width="0.3" height="15.0" fill="rgb(207,170,26)" rx="2" ry="2" />
<text text-anchor="" x="20.92" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>send_predictions (20,424 samples, 98.67%)</title><rect x="24.7" y="209" width="1164.3" height="15.0" fill="rgb(238,191,3)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >send_predictions</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (6 samples, 0.03%)</title><rect x="1189.5" y="273" width="0.3" height="15.0" fill="rgb(238,176,24)" rx="2" ry="2" />
<text text-anchor="" x="1192.49" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::internal::Stack&lt;rapidjson::CrtAllocator&gt;::Expand&lt;char&gt; (4 samples, 0.02%)</title><rect x="1182.6" y="81" width="0.2" height="15.0" fill="rgb(239,6,18)" rx="2" ry="2" />
<text text-anchor="" x="1185.59" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::ThreadPool::worker (132 samples, 0.64%)</title><rect x="10.3" y="225" width="7.6" height="15.0" fill="rgb(210,117,31)" rx="2" ry="2" />
<text text-anchor="" x="13.34" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TimerSystem&lt;clipper::HighPrecisionClock&gt;::set_timer (59 samples, 0.29%)</title><rect x="1184.8" y="177" width="3.3" height="15.0" fill="rgb(239,174,45)" rx="2" ry="2" />
<text text-anchor="" x="1187.76" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (3 samples, 0.01%)</title><rect x="1189.0" y="161" width="0.1" height="15.0" fill="rgb(236,172,40)" rx="2" ry="2" />
<text text-anchor="" x="1191.97" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (6 samples, 0.03%)</title><rect x="24.3" y="209" width="0.4" height="15.0" fill="rgb(249,204,5)" rx="2" ry="2" />
<text text-anchor="" x="27.31" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::RPCService::receive_message (2 samples, 0.01%)</title><rect x="19.2" y="193" width="0.1" height="15.0" fill="rgb(239,88,6)" rx="2" ry="2" />
<text text-anchor="" x="22.18" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (3 samples, 0.01%)</title><rect x="1188.6" y="145" width="0.1" height="15.0" fill="rgb(227,159,10)" rx="2" ry="2" />
<text text-anchor="" x="1191.57" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_execveat_common.isra.33 (3 samples, 0.01%)</title><rect x="1189.8" y="241" width="0.2" height="15.0" fill="rgb(211,113,4)" rx="2" ry="2" />
<text text-anchor="" x="1192.83" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libev.so.4.0.0] (3 samples, 0.01%)</title><rect x="17.9" y="161" width="0.2" height="15.0" fill="rgb(245,150,28)" rx="2" ry="2" />
<text text-anchor="" x="20.92" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (2 samples, 0.01%)</title><rect x="1188.9" y="161" width="0.1" height="15.0" fill="rgb(247,31,33)" rx="2" ry="2" />
<text text-anchor="" x="1191.86" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>realloc (2 samples, 0.01%)</title><rect x="1182.8" y="81" width="0.1" height="15.0" fill="rgb(213,113,32)" rx="2" ry="2" />
<text text-anchor="" x="1185.82" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libev.so.4.0.0] (3 samples, 0.01%)</title><rect x="17.9" y="193" width="0.2" height="15.0" fill="rgb(234,20,31)" rx="2" ry="2" />
<text text-anchor="" x="20.92" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (3 samples, 0.01%)</title><rect x="19.0" y="129" width="0.2" height="15.0" fill="rgb(213,102,27)" rx="2" ry="2" />
<text text-anchor="" x="22.01" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (5 samples, 0.02%)</title><rect x="1189.5" y="257" width="0.3" height="15.0" fill="rgb(245,137,30)" rx="2" ry="2" />
<text text-anchor="" x="1192.54" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (2 samples, 0.01%)</title><rect x="1182.9" y="129" width="0.1" height="15.0" fill="rgb(246,43,6)" rx="2" ry="2" />
<text text-anchor="" x="1185.93" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_handler&lt;void  (2 samples, 0.01%)</title><rect x="18.1" y="129" width="0.1" height="15.0" fill="rgb(238,173,46)" rx="2" ry="2" />
<text text-anchor="" x="21.10" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ev_run (5 samples, 0.02%)</title><rect x="17.9" y="209" width="0.3" height="15.0" fill="rgb(241,188,45)" rx="2" ry="2" />
<text text-anchor="" x="20.92" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::json::parse_json (20,318 samples, 98.16%)</title><rect x="24.7" y="129" width="1158.2" height="15.0" fill="rgb(210,101,39)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::json::parse_json</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>arena_get2.part.3 (3 samples, 0.01%)</title><rect x="17.9" y="113" width="0.2" height="15.0" fill="rgb(254,103,25)" rx="2" ry="2" />
<text text-anchor="" x="20.92" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sysmalloc (5 samples, 0.02%)</title><rect x="19.4" y="113" width="0.3" height="15.0" fill="rgb(230,153,6)" rx="2" ry="2" />
<text text-anchor="" x="22.41" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::BasicWriter&lt;char&gt;::write (3 samples, 0.01%)</title><rect x="18.7" y="177" width="0.1" height="15.0" fill="rgb(252,172,29)" rx="2" ry="2" />
<text text-anchor="" x="21.67" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (4 samples, 0.02%)</title><rect x="1182.6" y="49" width="0.2" height="15.0" fill="rgb(234,180,21)" rx="2" ry="2" />
<text text-anchor="" x="1185.59" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (3 samples, 0.01%)</title><rect x="1189.5" y="193" width="0.2" height="15.0" fill="rgb(217,210,4)" rx="2" ry="2" />
<text text-anchor="" x="1192.54" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::sinks::ansicolor_sink::log (6 samples, 0.03%)</title><rect x="18.8" y="193" width="0.4" height="15.0" fill="rgb(217,225,41)" rx="2" ry="2" />
<text text-anchor="" x="21.84" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memcpy_avx_unaligned (70 samples, 0.34%)</title><rect x="19.7" y="161" width="4.0" height="15.0" fill="rgb(246,220,32)" rx="2" ry="2" />
<text text-anchor="" x="22.69" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (4 samples, 0.02%)</title><rect x="1188.2" y="129" width="0.2" height="15.0" fill="rgb(238,182,18)" rx="2" ry="2" />
<text text-anchor="" x="1191.18" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Hashtable&lt;long, std::pair&lt;long const, clipper::CacheEntry&gt;, std::allocator&lt;std::pair&lt;long const, clipper::CacheEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (21 samples, 0.10%)</title><rect x="1183.3" y="129" width="1.2" height="15.0" fill="rgb(246,150,15)" rx="2" ry="2" />
<text text-anchor="" x="1186.33" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TaskExecutor::schedule_predictions (29 samples, 0.14%)</title><rect x="1183.1" y="177" width="1.7" height="15.0" fill="rgb(214,170,26)" rx="2" ry="2" />
<text text-anchor="" x="1186.10" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::details::async_log_helper::process_next_msg (12 samples, 0.06%)</title><rect x="18.5" y="209" width="0.7" height="15.0" fill="rgb(206,36,1)" rx="2" ry="2" />
<text text-anchor="" x="21.49" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::internal::MemoryBuffer&lt;char, 500ul, std::allocator&lt;char&gt; &gt;::grow (3 samples, 0.01%)</title><rect x="18.7" y="129" width="0.1" height="15.0" fill="rgb(233,184,0)" rx="2" ry="2" />
<text text-anchor="" x="21.67" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (20,699 samples, 100%)</title><rect x="10.0" y="305" width="1180.0" height="15.0" fill="rgb(243,184,24)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>arena_get2.part.3 (3 samples, 0.01%)</title><rect x="24.5" y="177" width="0.2" height="15.0" fill="rgb(221,70,5)" rx="2" ry="2" />
<text text-anchor="" x="27.48" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Hashtable&lt;long, std::pair&lt;long const, clipper::CacheEntry&gt;, std::allocator&lt;std::pair&lt;long const, clipper::CacheEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;unsigned long, clipper::CacheEntry&gt; &gt; (21 samples, 0.10%)</title><rect x="1183.3" y="145" width="1.2" height="15.0" fill="rgb(233,119,10)" rx="2" ry="2" />
<text text-anchor="" x="1186.33" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sysmalloc (20,157 samples, 97.38%)</title><rect x="33.5" y="33" width="1149.1" height="15.0" fill="rgb(228,225,3)" rx="2" ry="2" />
<text text-anchor="" x="36.49" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sysmalloc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::thread::_Impl&lt;std::_Bind_simple&lt;run_benchmark (20,439 samples, 98.74%)</title><rect x="23.8" y="225" width="1165.2" height="15.0" fill="rgb(226,191,4)" rx="2" ry="2" />
<text text-anchor="" x="26.80" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::thread::_Impl&lt;std::_Bind_simple&lt;run_benchmark</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (5 samples, 0.02%)</title><rect x="17.1" y="129" width="0.3" height="15.0" fill="rgb(243,44,44)" rx="2" ry="2" />
<text text-anchor="" x="20.13" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::internal::Stack&lt;rapidjson::CrtAllocator&gt;::Expand&lt;rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1182.8" y="97" width="0.1" height="15.0" fill="rgb(212,55,18)" rx="2" ry="2" />
<text text-anchor="" x="1185.82" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (2 samples, 0.01%)</title><rect x="1188.5" y="129" width="0.1" height="15.0" fill="rgb(223,142,14)" rx="2" ry="2" />
<text text-anchor="" x="1191.46" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clone (20,680 samples, 99.91%)</title><rect x="10.3" y="273" width="1179.0" height="15.0" fill="rgb(251,15,51)" rx="2" ry="2" />
<text text-anchor="" x="13.34" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__clone</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (3 samples, 0.01%)</title><rect x="24.3" y="177" width="0.2" height="15.0" fill="rgb(220,18,12)" rx="2" ry="2" />
<text text-anchor="" x="27.31" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (2 samples, 0.01%)</title><rect x="18.7" y="113" width="0.1" height="15.0" fill="rgb(211,31,2)" rx="2" ry="2" />
<text text-anchor="" x="21.72" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::metrics::MetricsRegistry::report_metrics[abi:cxx11] (2 samples, 0.01%)</title><rect x="18.3" y="193" width="0.1" height="15.0" fill="rgb(222,183,40)" rx="2" ry="2" />
<text text-anchor="" x="21.32" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (3 samples, 0.01%)</title><rect x="17.9" y="129" width="0.2" height="15.0" fill="rgb(210,10,12)" rx="2" ry="2" />
<text text-anchor="" x="20.92" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::thread::_Impl&lt;std::_Bind_simple&lt;clipper::rpc::RPCService::start (81 samples, 0.39%)</title><rect x="19.2" y="225" width="4.6" height="15.0" fill="rgb(245,194,28)" rx="2" ry="2" />
<text text-anchor="" x="22.18" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::PredictionRequest::serialize (121 samples, 0.58%)</title><rect x="10.5" y="161" width="6.9" height="15.0" fill="rgb(206,98,42)" rx="2" ry="2" />
<text text-anchor="" x="13.51" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (5 samples, 0.02%)</title><rect x="1189.0" y="225" width="0.3" height="15.0" fill="rgb(216,206,32)" rx="2" ry="2" />
<text text-anchor="" x="1191.97" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (2 samples, 0.01%)</title><rect x="18.7" y="81" width="0.1" height="15.0" fill="rgb(249,144,30)" rx="2" ry="2" />
<text text-anchor="" x="21.72" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DefaultOutputSelectionPolicy::deserialize (20,320 samples, 98.17%)</title><rect x="24.7" y="177" width="1158.3" height="15.0" fill="rgb(230,23,43)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::DefaultOutputSelectionPolicy::deserialize</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::Promise&lt;folly::Unit&gt;::Promise (4 samples, 0.02%)</title><rect x="1188.2" y="177" width="0.2" height="15.0" fill="rgb(208,117,29)" rx="2" ry="2" />
<text text-anchor="" x="1191.18" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, clipper::PredictTask&gt;, std::allocator&lt;std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, clipper::PredictTask&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;&amp;, clipper::PredictTask&gt; (4 samples, 0.02%)</title><rect x="1184.5" y="161" width="0.3" height="15.0" fill="rgb(215,124,26)" rx="2" ry="2" />
<text text-anchor="" x="1187.53" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memmove_avx_unaligned (2 samples, 0.01%)</title><rect x="18.9" y="145" width="0.1" height="15.0" fill="rgb(252,121,9)" rx="2" ry="2" />
<text text-anchor="" x="21.89" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (2 samples, 0.01%)</title><rect x="1188.0" y="113" width="0.1" height="15.0" fill="rgb(251,176,31)" rx="2" ry="2" />
<text text-anchor="" x="1191.00" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>zmq_send (77 samples, 0.37%)</title><rect x="19.3" y="177" width="4.4" height="15.0" fill="rgb(248,220,47)" rx="2" ry="2" />
<text text-anchor="" x="22.29" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (5 samples, 0.02%)</title><rect x="1189.0" y="241" width="0.3" height="15.0" fill="rgb(231,211,9)" rx="2" ry="2" />
<text text-anchor="" x="1191.97" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>search_binary_handler (3 samples, 0.01%)</title><rect x="1189.8" y="225" width="0.2" height="15.0" fill="rgb(246,45,14)" rx="2" ry="2" />
<text text-anchor="" x="1192.83" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (7 samples, 0.03%)</title><rect x="19.3" y="129" width="0.4" height="15.0" fill="rgb(242,223,43)" rx="2" ry="2" />
<text text-anchor="" x="22.29" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::RPCService::send_messages (77 samples, 0.37%)</title><rect x="19.3" y="193" width="4.4" height="15.0" fill="rgb(223,97,39)" rx="2" ry="2" />
<text text-anchor="" x="22.29" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (2 samples, 0.01%)</title><rect x="1188.0" y="145" width="0.1" height="15.0" fill="rgb(231,222,31)" rx="2" ry="2" />
<text text-anchor="" x="1191.00" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>new_heap (3 samples, 0.01%)</title><rect x="24.5" y="161" width="0.2" height="15.0" fill="rgb(230,127,8)" rx="2" ry="2" />
<text text-anchor="" x="27.48" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (3 samples, 0.01%)</title><rect x="1189.5" y="177" width="0.2" height="15.0" fill="rgb(226,32,49)" rx="2" ry="2" />
<text text-anchor="" x="1192.54" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (3 samples, 0.01%)</title><rect x="19.0" y="145" width="0.2" height="15.0" fill="rgb(234,182,5)" rx="2" ry="2" />
<text text-anchor="" x="22.01" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (4 samples, 0.02%)</title><rect x="1188.2" y="161" width="0.2" height="15.0" fill="rgb(244,72,15)" rx="2" ry="2" />
<text text-anchor="" x="1191.18" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>dl_main (2 samples, 0.01%)</title><rect x="1189.4" y="225" width="0.1" height="15.0" fill="rgb(240,166,24)" rx="2" ry="2" />
<text text-anchor="" x="1192.37" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="1189.0" y="145" width="0.1" height="15.0" fill="rgb(240,133,41)" rx="2" ry="2" />
<text text-anchor="" x="1191.97" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libstdc++.so.6.0.21] (20,675 samples, 99.88%)</title><rect x="10.3" y="241" width="1178.7" height="15.0" fill="rgb(224,120,22)" rx="2" ry="2" />
<text text-anchor="" x="13.34" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libstdc++.so.6.0.21]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clear_user (2 samples, 0.01%)</title><rect x="1189.8" y="193" width="0.1" height="15.0" fill="rgb(230,229,20)" rx="2" ry="2" />
<text text-anchor="" x="1192.83" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Hashtable&lt;long, std::pair&lt;long const, clipper::CacheEntry&gt;, std::allocator&lt;std::pair&lt;long const, clipper::CacheEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (21 samples, 0.10%)</title><rect x="1183.3" y="113" width="1.2" height="15.0" fill="rgb(207,114,44)" rx="2" ry="2" />
<text text-anchor="" x="1186.33" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseString&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt; (4 samples, 0.02%)</title><rect x="1182.6" y="97" width="0.2" height="15.0" fill="rgb(251,189,42)" rx="2" ry="2" />
<text text-anchor="" x="1185.59" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ev_feed_event (3 samples, 0.01%)</title><rect x="17.9" y="177" width="0.2" height="15.0" fill="rgb(208,21,9)" rx="2" ry="2" />
<text text-anchor="" x="20.92" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseObject&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt; (20,318 samples, 98.16%)</title><rect x="24.7" y="113" width="1158.2" height="15.0" fill="rgb(227,41,40)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseObject&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;clipper::InflightMessage, std::allocator&lt;clipper::InflightMessage&gt; &gt;::_M_emplace_back_aux&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;&amp;, int&amp;, clipper::VersionedModelId&amp;, int&amp;, std::shared_ptr&lt;clipper::Input&gt;&amp;&gt; (5 samples, 0.02%)</title><rect x="17.4" y="161" width="0.3" height="15.0" fill="rgb(223,161,53)" rx="2" ry="2" />
<text text-anchor="" x="20.41" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="1188.9" y="177" width="0.1" height="15.0" fill="rgb(232,101,14)" rx="2" ry="2" />
<text text-anchor="" x="1191.86" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::QueryProcessor::predict (20,422 samples, 98.66%)</title><rect x="24.7" y="193" width="1164.2" height="15.0" fill="rgb(218,9,34)" rx="2" ry="2" />
<text text-anchor="" x="27.65" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::QueryProcessor::predict</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (2 samples, 0.01%)</title><rect x="1182.9" y="161" width="0.1" height="15.0" fill="rgb(254,110,8)" rx="2" ry="2" />
<text text-anchor="" x="1185.93" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TaskExecutor::on_container_ready (2 samples, 0.01%)</title><rect x="17.8" y="209" width="0.1" height="15.0" fill="rgb(213,179,30)" rx="2" ry="2" />
<text text-anchor="" x="20.75" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="1182.9" y="145" width="0.1" height="15.0" fill="rgb(246,77,40)" rx="2" ry="2" />
<text text-anchor="" x="1185.93" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>realloc (3 samples, 0.01%)</title><rect x="17.9" y="145" width="0.2" height="15.0" fill="rgb(206,118,46)" rx="2" ry="2" />
<text text-anchor="" x="20.92" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_int_malloc (2 samples, 0.01%)</title><rect x="1182.8" y="49" width="0.1" height="15.0" fill="rgb(205,179,0)" rx="2" ry="2" />
<text text-anchor="" x="1185.82" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (2 samples, 0.01%)</title><rect x="1188.5" y="161" width="0.1" height="15.0" fill="rgb(245,201,8)" rx="2" ry="2" />
<text text-anchor="" x="1191.46" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bench_utils::load_cifar2 (3 samples, 0.01%)</title><rect x="1189.5" y="209" width="0.2" height="15.0" fill="rgb(226,120,33)" rx="2" ry="2" />
<text text-anchor="" x="1192.54" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::collect&lt;__gnu_cxx::__normal_iterator&lt;folly::Future&lt;folly::Unit&gt;*, std::vector&lt;folly::Future&lt;folly::Unit&gt;, std::allocator&lt;folly::Future&lt;folly::Unit&gt; &gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1188.5" y="177" width="0.1" height="15.0" fill="rgb(223,167,5)" rx="2" ry="2" />
<text text-anchor="" x="1191.46" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::internal::MemoryBuffer&lt;char, 500ul, std::allocator&lt;char&gt; &gt;::grow (5 samples, 0.02%)</title><rect x="18.9" y="161" width="0.3" height="15.0" fill="rgb(227,155,16)" rx="2" ry="2" />
<text text-anchor="" x="21.89" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>report_window_details (2 samples, 0.01%)</title><rect x="18.3" y="209" width="0.1" height="15.0" fill="rgb(243,218,23)" rx="2" ry="2" />
<text text-anchor="" x="21.32" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
