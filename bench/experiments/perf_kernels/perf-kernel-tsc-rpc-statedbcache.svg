<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="370" onload="init(evt)" viewBox="0 0 1200 370" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="370.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="353" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="353" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (315 samples, 0.76%)</title><rect x="966.7" y="177" width="9.1" height="15.0" fill="rgb(209,12,28)" rx="2" ry="2" />
<text text-anchor="" x="969.73" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;int, std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_assign (141 samples, 0.34%)</title><rect x="1185.8" y="225" width="4.1" height="15.0" fill="rgb(233,146,31)" rx="2" ry="2" />
<text text-anchor="" x="1188.85" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::collect&lt;__gnu_cxx::__normal_iterator&lt;folly::Future&lt;folly::Unit&gt;*, std::vector&lt;folly::Future&lt;folly::Unit&gt;, std::allocator&lt;folly::Future&lt;folly::Unit&gt; &gt; &gt; &gt; &gt; (237 samples, 0.58%)</title><rect x="959.9" y="193" width="6.8" height="15.0" fill="rgb(206,156,23)" rx="2" ry="2" />
<text text-anchor="" x="962.94" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clone (40,810 samples, 99.08%)</title><rect x="10.3" y="289" width="1169.2" height="15.0" fill="rgb(235,128,39)" rx="2" ry="2" />
<text text-anchor="" x="13.32" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__clone</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (36 samples, 0.09%)</title><rect x="1184.8" y="209" width="1.0" height="15.0" fill="rgb(207,102,37)" rx="2" ry="2" />
<text text-anchor="" x="1187.79" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (18 samples, 0.04%)</title><rect x="31.5" y="193" width="0.5" height="15.0" fill="rgb(250,18,35)" rx="2" ry="2" />
<text text-anchor="" x="34.52" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>report_window_details (4 samples, 0.01%)</title><rect x="29.9" y="225" width="0.1" height="15.0" fill="rgb(246,40,10)" rx="2" ry="2" />
<text text-anchor="" x="32.91" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (45 samples, 0.11%)</title><rect x="939.3" y="161" width="1.3" height="15.0" fill="rgb(254,203,31)" rx="2" ry="2" />
<text text-anchor="" x="942.29" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>load_elf_binary (4 samples, 0.01%)</title><rect x="1189.9" y="225" width="0.1" height="15.0" fill="rgb(223,198,48)" rx="2" ry="2" />
<text text-anchor="" x="1192.89" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;folly::Future&lt;folly::Unit&gt;, std::allocator&lt;folly::Future&lt;folly::Unit&gt; &gt; &gt;::emplace_back&lt;folly::Future&lt;folly::Unit&gt; &gt; (84 samples, 0.20%)</title><rect x="1000.6" y="193" width="2.4" height="15.0" fill="rgb(212,203,20)" rx="2" ry="2" />
<text text-anchor="" x="1003.62" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (20 samples, 0.05%)</title><rect x="1178.9" y="257" width="0.6" height="15.0" fill="rgb(244,24,12)" rx="2" ry="2" />
<text text-anchor="" x="1181.94" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_recv (5 samples, 0.01%)</title><rect x="1179.4" y="193" width="0.1" height="15.0" fill="rgb(206,59,26)" rx="2" ry="2" />
<text text-anchor="" x="1182.37" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (12 samples, 0.03%)</title><rect x="30.3" y="161" width="0.3" height="15.0" fill="rgb(235,196,33)" rx="2" ry="2" />
<text text-anchor="" x="33.26" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (892 samples, 2.17%)</title><rect x="33.3" y="177" width="25.6" height="15.0" fill="rgb(243,4,4)" rx="2" ry="2" />
<text text-anchor="" x="36.32" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;clipper::PredictTask, std::allocator&lt;clipper::PredictTask&gt; &gt;::_M_emplace_back_aux&lt;clipper::PredictTask const&amp;&gt; (23 samples, 0.06%)</title><rect x="28.9" y="177" width="0.6" height="15.0" fill="rgb(216,66,12)" rx="2" ry="2" />
<text text-anchor="" x="31.85" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (126 samples, 0.31%)</title><rect x="78.7" y="225" width="3.6" height="15.0" fill="rgb(250,36,17)" rx="2" ry="2" />
<text text-anchor="" x="81.67" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (358 samples, 0.87%)</title><rect x="975.8" y="177" width="10.2" height="15.0" fill="rgb(209,128,36)" rx="2" ry="2" />
<text text-anchor="" x="978.76" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (325 samples, 0.79%)</title><rect x="895.1" y="65" width="9.3" height="15.0" fill="rgb(252,140,1)" rx="2" ry="2" />
<text text-anchor="" x="898.08" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (358 samples, 0.87%)</title><rect x="975.8" y="145" width="10.2" height="15.0" fill="rgb(251,203,41)" rx="2" ry="2" />
<text text-anchor="" x="978.76" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>run_benchmark (362 samples, 0.88%)</title><rect x="1179.5" y="241" width="10.4" height="15.0" fill="rgb(232,48,9)" rx="2" ry="2" />
<text text-anchor="" x="1182.51" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (22,568 samples, 54.79%)</title><rect x="82.3" y="209" width="646.6" height="15.0" fill="rgb(216,27,18)" rx="2" ry="2" />
<text text-anchor="" x="85.28" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (20 samples, 0.05%)</title><rect x="1178.9" y="209" width="0.6" height="15.0" fill="rgb(217,116,48)" rx="2" ry="2" />
<text text-anchor="" x="1181.94" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (18 samples, 0.04%)</title><rect x="31.5" y="177" width="0.5" height="15.0" fill="rgb(207,47,50)" rx="2" ry="2" />
<text text-anchor="" x="34.52" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (23 samples, 0.06%)</title><rect x="58.9" y="161" width="0.6" height="15.0" fill="rgb(233,93,8)" rx="2" ry="2" />
<text text-anchor="" x="61.88" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseObject&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt; (7,345 samples, 17.83%)</title><rect x="728.9" y="129" width="210.4" height="15.0" fill="rgb(216,214,53)" rx="2" ry="2" />
<text text-anchor="" x="731.85" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >rapidjson::GenericReader&lt;ra..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ev_run (5 samples, 0.01%)</title><rect x="29.7" y="225" width="0.2" height="15.0" fill="rgb(252,11,37)" rx="2" ry="2" />
<text text-anchor="" x="32.71" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::thread::_Impl&lt;std::_Bind_simple&lt;run_benchmark (39,071 samples, 94.86%)</title><rect x="59.6" y="241" width="1119.3" height="15.0" fill="rgb(231,58,37)" rx="2" ry="2" />
<text text-anchor="" x="62.56" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::thread::_Impl&lt;std::_Bind_simple&lt;run_benchmark</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (9 samples, 0.02%)</title><rect x="1179.1" y="161" width="0.2" height="15.0" fill="rgb(210,75,5)" rx="2" ry="2" />
<text text-anchor="" x="1182.06" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (237 samples, 0.58%)</title><rect x="959.9" y="161" width="6.8" height="15.0" fill="rgb(233,200,46)" rx="2" ry="2" />
<text text-anchor="" x="962.94" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (10 samples, 0.02%)</title><rect x="1180.3" y="193" width="0.3" height="15.0" fill="rgb(233,2,51)" rx="2" ry="2" />
<text text-anchor="" x="1183.32" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;::vector (141 samples, 0.34%)</title><rect x="1185.8" y="193" width="4.1" height="15.0" fill="rgb(245,142,41)" rx="2" ry="2" />
<text text-anchor="" x="1188.85" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (5 samples, 0.01%)</title><rect x="26.6" y="129" width="0.2" height="15.0" fill="rgb(251,74,41)" rx="2" ry="2" />
<text text-anchor="" x="29.62" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (4 samples, 0.01%)</title><rect x="1185.7" y="161" width="0.1" height="15.0" fill="rgb(251,16,15)" rx="2" ry="2" />
<text text-anchor="" x="1188.70" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (6,140 samples, 14.91%)</title><rect x="1003.0" y="193" width="175.9" height="15.0" fill="rgb(235,202,13)" rx="2" ry="2" />
<text text-anchor="" x="1006.03" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >malloc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (4 samples, 0.01%)</title><rect x="1180.6" y="177" width="0.1" height="15.0" fill="rgb(251,8,18)" rx="2" ry="2" />
<text text-anchor="" x="1183.60" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (20 samples, 0.05%)</title><rect x="1189.3" y="161" width="0.6" height="15.0" fill="rgb(244,141,46)" rx="2" ry="2" />
<text text-anchor="" x="1192.31" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start_thread (40,810 samples, 99.08%)</title><rect x="10.3" y="273" width="1169.2" height="15.0" fill="rgb(211,121,22)" rx="2" ry="2" />
<text text-anchor="" x="13.32" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >start_thread</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_execve (4 samples, 0.01%)</title><rect x="1189.9" y="273" width="0.1" height="15.0" fill="rgb(238,204,45)" rx="2" ry="2" />
<text text-anchor="" x="1192.89" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (126 samples, 0.31%)</title><rect x="78.7" y="193" width="3.6" height="15.0" fill="rgb(253,7,35)" rx="2" ry="2" />
<text text-anchor="" x="81.67" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (358 samples, 0.87%)</title><rect x="975.8" y="161" width="10.2" height="15.0" fill="rgb(211,125,30)" rx="2" ry="2" />
<text text-anchor="" x="978.76" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (45 samples, 0.11%)</title><rect x="939.3" y="177" width="1.3" height="15.0" fill="rgb(242,147,46)" rx="2" ry="2" />
<text text-anchor="" x="942.29" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (4 samples, 0.01%)</title><rect x="1180.6" y="193" width="0.1" height="15.0" fill="rgb(254,223,16)" rx="2" ry="2" />
<text text-anchor="" x="1183.60" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (516 samples, 1.25%)</title><rect x="945.2" y="145" width="14.7" height="15.0" fill="rgb(230,53,53)" rx="2" ry="2" />
<text text-anchor="" x="948.16" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (17 samples, 0.04%)</title><rect x="30.9" y="113" width="0.5" height="15.0" fill="rgb(227,163,2)" rx="2" ry="2" />
<text text-anchor="" x="33.91" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (18 samples, 0.04%)</title><rect x="31.5" y="161" width="0.5" height="15.0" fill="rgb(208,180,47)" rx="2" ry="2" />
<text text-anchor="" x="34.52" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>entry_SYSCALL_64_fastpath (5 samples, 0.01%)</title><rect x="1179.4" y="177" width="0.1" height="15.0" fill="rgb(231,104,45)" rx="2" ry="2" />
<text text-anchor="" x="1182.37" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SYSC_recvfrom (5 samples, 0.01%)</title><rect x="1179.4" y="145" width="0.1" height="15.0" fill="rgb(249,154,6)" rx="2" ry="2" />
<text text-anchor="" x="1182.37" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (20 samples, 0.05%)</title><rect x="1189.3" y="145" width="0.6" height="15.0" fill="rgb(252,23,38)" rx="2" ry="2" />
<text text-anchor="" x="1192.31" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (86 samples, 0.21%)</title><rect x="940.6" y="145" width="2.4" height="15.0" fill="rgb(219,16,47)" rx="2" ry="2" />
<text text-anchor="" x="943.57" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::RPCService::receive_message (63 samples, 0.15%)</title><rect x="31.5" y="209" width="1.8" height="15.0" fill="rgb(215,222,49)" rx="2" ry="2" />
<text text-anchor="" x="34.52" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (20 samples, 0.05%)</title><rect x="1178.9" y="225" width="0.6" height="15.0" fill="rgb(235,149,35)" rx="2" ry="2" />
<text text-anchor="" x="1181.94" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sock_recvmsg (5 samples, 0.01%)</title><rect x="1179.4" y="129" width="0.1" height="15.0" fill="rgb(223,172,24)" rx="2" ry="2" />
<text text-anchor="" x="1182.37" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redox::Redox::runEventLoop (5 samples, 0.01%)</title><rect x="29.7" y="241" width="0.2" height="15.0" fill="rgb(216,152,22)" rx="2" ry="2" />
<text text-anchor="" x="32.71" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (22 samples, 0.05%)</title><rect x="58.9" y="129" width="0.6" height="15.0" fill="rgb(233,193,34)" rx="2" ry="2" />
<text text-anchor="" x="61.91" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (40 samples, 0.10%)</title><rect x="728.9" y="97" width="1.1" height="15.0" fill="rgb(223,47,7)" rx="2" ry="2" />
<text text-anchor="" x="731.85" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>send_predictions (38,278 samples, 92.94%)</title><rect x="82.3" y="225" width="1096.6" height="15.0" fill="rgb(236,12,39)" rx="2" ry="2" />
<text text-anchor="" x="85.28" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >send_predictions</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (315 samples, 0.76%)</title><rect x="966.7" y="145" width="9.1" height="15.0" fill="rgb(240,85,0)" rx="2" ry="2" />
<text text-anchor="" x="969.73" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (28 samples, 0.07%)</title><rect x="30.6" y="145" width="0.8" height="15.0" fill="rgb(241,73,53)" rx="2" ry="2" />
<text text-anchor="" x="33.60" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::internal::MemoryBuffer&lt;char, 500ul, std::allocator&lt;char&gt; &gt;::grow (40 samples, 0.10%)</title><rect x="30.3" y="177" width="1.1" height="15.0" fill="rgb(246,168,36)" rx="2" ry="2" />
<text text-anchor="" x="33.26" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (510 samples, 1.24%)</title><rect x="986.0" y="193" width="14.6" height="15.0" fill="rgb(218,8,27)" rx="2" ry="2" />
<text text-anchor="" x="989.01" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::ThreadPool::worker (676 samples, 1.64%)</title><rect x="10.3" y="241" width="19.4" height="15.0" fill="rgb(213,140,30)" rx="2" ry="2" />
<text text-anchor="" x="13.32" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>search_binary_handler (4 samples, 0.01%)</title><rect x="1189.9" y="241" width="0.1" height="15.0" fill="rgb(251,78,4)" rx="2" ry="2" />
<text text-anchor="" x="1192.89" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (665 samples, 1.61%)</title><rect x="59.6" y="225" width="19.1" height="15.0" fill="rgb(251,21,50)" rx="2" ry="2" />
<text text-anchor="" x="62.62" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TaskExecutor::schedule_predictions (54 samples, 0.13%)</title><rect x="943.0" y="193" width="1.6" height="15.0" fill="rgb(229,36,3)" rx="2" ry="2" />
<text text-anchor="" x="946.04" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::collectAny&lt;__gnu_cxx::__normal_iterator&lt;folly::Future&lt;folly::Unit&gt;*, std::vector&lt;folly::Future&lt;folly::Unit&gt;, std::allocator&lt;folly::Future&lt;folly::Unit&gt; &gt; &gt; &gt; &gt; (315 samples, 0.76%)</title><rect x="966.7" y="193" width="9.1" height="15.0" fill="rgb(241,202,37)" rx="2" ry="2" />
<text text-anchor="" x="969.73" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::Query::Query (131 samples, 0.32%)</title><rect x="939.3" y="193" width="3.7" height="15.0" fill="rgb(234,163,16)" rx="2" ry="2" />
<text text-anchor="" x="942.29" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DefaultOutputSelectionPolicy::deserialize (7,345 samples, 17.83%)</title><rect x="728.9" y="193" width="210.4" height="15.0" fill="rgb(209,47,41)" rx="2" ry="2" />
<text text-anchor="" x="731.85" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::DefaultOutputSelec..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseString&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt; (325 samples, 0.79%)</title><rect x="895.1" y="113" width="9.3" height="15.0" fill="rgb(212,26,9)" rx="2" ry="2" />
<text text-anchor="" x="898.08" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::futures::detail::FSM&lt;folly::futures::detail::State&gt;::updateState&lt;void folly::futures::detail::Core&lt;std::pair&lt;unsigned long, folly::Try&lt;folly::Unit&gt; &gt; &gt;::setCallback&lt;std::enable_if&lt;!folly::futures::detail::callableResult&lt;std::pair&lt;unsigned long, folly::Try&lt;folly::Unit&gt; &gt;, {lambda (358 samples, 0.87%)</title><rect x="975.8" y="193" width="10.2" height="15.0" fill="rgb(237,145,1)" rx="2" ry="2" />
<text text-anchor="" x="978.76" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libstdc++.so.6.0.21] (40,790 samples, 99.04%)</title><rect x="10.3" y="257" width="1168.6" height="15.0" fill="rgb(250,137,4)" rx="2" ry="2" />
<text text-anchor="" x="13.32" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libstdc++.so.6.0.21]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (86 samples, 0.21%)</title><rect x="940.6" y="129" width="2.4" height="15.0" fill="rgb(252,39,16)" rx="2" ry="2" />
<text text-anchor="" x="943.57" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>return_from_execve (4 samples, 0.01%)</title><rect x="1189.9" y="289" width="0.1" height="15.0" fill="rgb(230,50,17)" rx="2" ry="2" />
<text text-anchor="" x="1192.89" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::RPCService::send_messages (915 samples, 2.22%)</title><rect x="33.3" y="209" width="26.2" height="15.0" fill="rgb(254,124,23)" rx="2" ry="2" />
<text text-anchor="" x="36.32" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (6,140 samples, 14.91%)</title><rect x="1003.0" y="209" width="175.9" height="15.0" fill="rgb(207,59,50)" rx="2" ry="2" />
<text text-anchor="" x="1006.03" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >operator new</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>inet_recvmsg (5 samples, 0.01%)</title><rect x="1179.4" y="113" width="0.1" height="15.0" fill="rgb(239,26,32)" rx="2" ry="2" />
<text text-anchor="" x="1182.37" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::shared_ptr&lt;clipper::Timer&gt;, std::allocator&lt;std::shared_ptr&lt;clipper::Timer&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::shared_ptr&lt;clipper::Timer&gt; &gt; (7 samples, 0.02%)</title><rect x="945.0" y="177" width="0.2" height="15.0" fill="rgb(220,218,15)" rx="2" ry="2" />
<text text-anchor="" x="947.96" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::RPCService::manage_service (983 samples, 2.39%)</title><rect x="31.4" y="225" width="28.2" height="15.0" fill="rgb(246,37,8)" rx="2" ry="2" />
<text text-anchor="" x="34.40" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_recvfrom (5 samples, 0.01%)</title><rect x="1179.4" y="161" width="0.1" height="15.0" fill="rgb(219,224,11)" rx="2" ry="2" />
<text text-anchor="" x="1182.37" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bench_utils::concatenate_cifar_datapoints (42 samples, 0.10%)</title><rect x="1179.5" y="225" width="1.2" height="15.0" fill="rgb(253,25,42)" rx="2" ry="2" />
<text text-anchor="" x="1182.51" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (12 samples, 0.03%)</title><rect x="11.2" y="145" width="0.3" height="15.0" fill="rgb(254,68,0)" rx="2" ry="2" />
<text text-anchor="" x="14.17" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::thread::_Impl&lt;std::_Bind_simple&lt;clipper::rpc::RPCService::start (983 samples, 2.39%)</title><rect x="31.4" y="241" width="28.2" height="15.0" fill="rgb(208,65,6)" rx="2" ry="2" />
<text text-anchor="" x="34.40" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>end_to_end_benc (41,187 samples, 100.00%)</title><rect x="10.0" y="305" width="1180.0" height="15.0" fill="rgb(248,123,14)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >end_to_end_benc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (5,701 samples, 13.84%)</title><rect x="731.7" y="81" width="163.4" height="15.0" fill="rgb(223,204,41)" rx="2" ry="2" />
<text text-anchor="" x="734.75" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >malloc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (23 samples, 0.06%)</title><rect x="58.9" y="177" width="0.6" height="15.0" fill="rgb(241,171,46)" rx="2" ry="2" />
<text text-anchor="" x="61.88" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;clipper::VersionedModelId, std::allocator&lt;clipper::VersionedModelId&gt; &gt;::vector (86 samples, 0.21%)</title><rect x="940.6" y="177" width="2.4" height="15.0" fill="rgb(205,100,34)" rx="2" ry="2" />
<text text-anchor="" x="943.57" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (237 samples, 0.58%)</title><rect x="959.9" y="177" width="6.8" height="15.0" fill="rgb(241,90,10)" rx="2" ry="2" />
<text text-anchor="" x="962.94" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::QueryProcessor::predict (9,570 samples, 23.24%)</title><rect x="728.9" y="209" width="274.1" height="15.0" fill="rgb(244,80,43)" rx="2" ry="2" />
<text text-anchor="" x="731.85" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::QueryProcessor::predict</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::EndObject (5,802 samples, 14.09%)</title><rect x="728.9" y="113" width="166.2" height="15.0" fill="rgb(224,69,43)" rx="2" ry="2" />
<text text-anchor="" x="731.85" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >rapidjson::GenericDoc..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (9 samples, 0.02%)</title><rect x="1179.1" y="145" width="0.2" height="15.0" fill="rgb(231,177,8)" rx="2" ry="2" />
<text text-anchor="" x="1182.06" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (6,140 samples, 14.91%)</title><rect x="1003.0" y="177" width="175.9" height="15.0" fill="rgb(206,218,45)" rx="2" ry="2" />
<text text-anchor="" x="1006.03" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (20 samples, 0.05%)</title><rect x="1189.3" y="177" width="0.6" height="15.0" fill="rgb(225,43,32)" rx="2" ry="2" />
<text text-anchor="" x="1192.31" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (28 samples, 0.07%)</title><rect x="30.6" y="161" width="0.8" height="15.0" fill="rgb(248,129,25)" rx="2" ry="2" />
<text text-anchor="" x="33.60" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;::Malloc (5,762 samples, 13.99%)</title><rect x="730.0" y="97" width="165.1" height="15.0" fill="rgb(254,51,28)" rx="2" ry="2" />
<text text-anchor="" x="733.00" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >rapidjson::MemoryPool..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>copy_user_enhanced_fast_string (4 samples, 0.01%)</title><rect x="1179.4" y="49" width="0.1" height="15.0" fill="rgb(218,225,10)" rx="2" ry="2" />
<text text-anchor="" x="1182.40" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (4 samples, 0.01%)</title><rect x="1180.6" y="161" width="0.1" height="15.0" fill="rgb(228,0,53)" rx="2" ry="2" />
<text text-anchor="" x="1183.60" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, clipper::PredictTask&gt;, std::allocator&lt;std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, clipper::PredictTask&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;&amp;, clipper::PredictTask&gt; (19 samples, 0.05%)</title><rect x="944.0" y="177" width="0.6" height="15.0" fill="rgb(242,207,21)" rx="2" ry="2" />
<text text-anchor="" x="947.04" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::PredictionRequest::serialize (532 samples, 1.29%)</title><rect x="11.5" y="177" width="15.3" height="15.0" fill="rgb(207,60,25)" rx="2" ry="2" />
<text text-anchor="" x="14.52" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>zmq_recv (45 samples, 0.11%)</title><rect x="32.0" y="193" width="1.3" height="15.0" fill="rgb(233,204,35)" rx="2" ry="2" />
<text text-anchor="" x="35.03" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (13 samples, 0.03%)</title><rect x="1179.0" y="177" width="0.3" height="15.0" fill="rgb(243,65,14)" rx="2" ry="2" />
<text text-anchor="" x="1181.97" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (86 samples, 0.21%)</title><rect x="940.6" y="161" width="2.4" height="15.0" fill="rgb(220,137,18)" rx="2" ry="2" />
<text text-anchor="" x="943.57" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>copy_page_to_iter (5 samples, 0.01%)</title><rect x="1179.4" y="65" width="0.1" height="15.0" fill="rgb(241,57,1)" rx="2" ry="2" />
<text text-anchor="" x="1182.37" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (5 samples, 0.01%)</title><rect x="26.6" y="161" width="0.2" height="15.0" fill="rgb(231,5,32)" rx="2" ry="2" />
<text text-anchor="" x="29.62" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (4 samples, 0.01%)</title><rect x="31.4" y="209" width="0.1" height="15.0" fill="rgb(227,229,21)" rx="2" ry="2" />
<text text-anchor="" x="34.40" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>realloc (325 samples, 0.79%)</title><rect x="895.1" y="81" width="9.3" height="15.0" fill="rgb(247,126,53)" rx="2" ry="2" />
<text text-anchor="" x="898.08" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (362 samples, 0.88%)</title><rect x="1179.5" y="257" width="10.4" height="15.0" fill="rgb(248,88,24)" rx="2" ry="2" />
<text text-anchor="" x="1182.51" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TimerSystem&lt;clipper::HighPrecisionClock&gt;::set_timer (20 samples, 0.05%)</title><rect x="944.6" y="193" width="0.6" height="15.0" fill="rgb(208,192,43)" rx="2" ry="2" />
<text text-anchor="" x="947.59" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (121 samples, 0.29%)</title><rect x="1185.8" y="177" width="3.5" height="15.0" fill="rgb(219,142,48)" rx="2" ry="2" />
<text text-anchor="" x="1188.85" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (36 samples, 0.09%)</title><rect x="1184.8" y="193" width="1.0" height="15.0" fill="rgb(239,47,34)" rx="2" ry="2" />
<text text-anchor="" x="1187.79" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::metrics::MetricsRegistry::report_metrics[abi:cxx11] (4 samples, 0.01%)</title><rect x="29.9" y="209" width="0.1" height="15.0" fill="rgb(254,67,29)" rx="2" ry="2" />
<text text-anchor="" x="32.91" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::detail::task_shared_state&lt;std::_Bind&lt;std::function&lt;void  (673 samples, 1.63%)</title><rect x="10.3" y="225" width="19.3" height="15.0" fill="rgb(210,18,35)" rx="2" ry="2" />
<text text-anchor="" x="13.32" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (126 samples, 0.31%)</title><rect x="78.7" y="209" width="3.6" height="15.0" fill="rgb(252,180,47)" rx="2" ry="2" />
<text text-anchor="" x="81.67" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TaskExecutor::on_container_ready (670 samples, 1.63%)</title><rect x="10.3" y="193" width="19.2" height="15.0" fill="rgb(209,144,3)" rx="2" ry="2" />
<text text-anchor="" x="13.32" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (362 samples, 0.88%)</title><rect x="1179.5" y="273" width="10.4" height="15.0" fill="rgb(237,138,44)" rx="2" ry="2" />
<text text-anchor="" x="1182.51" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (1,218 samples, 2.96%)</title><rect x="904.4" y="65" width="34.9" height="15.0" fill="rgb(248,129,31)" rx="2" ry="2" />
<text text-anchor="" x="907.39" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[l..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;clipper::InflightMessage, std::allocator&lt;clipper::InflightMessage&gt; &gt;::_M_emplace_back_aux&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;&amp;, int&amp;, clipper::VersionedModelId&amp;, int&amp;, std::shared_ptr&lt;clipper::Input&gt;&amp;&gt; (73 samples, 0.18%)</title><rect x="26.8" y="177" width="2.1" height="15.0" fill="rgb(214,63,26)" rx="2" ry="2" />
<text text-anchor="" x="29.76" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>realloc (1,218 samples, 2.96%)</title><rect x="904.4" y="97" width="34.9" height="15.0" fill="rgb(243,35,53)" rx="2" ry="2" />
<text text-anchor="" x="907.39" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >re..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DefaultOutputSelectionState::deserialize (7,345 samples, 17.83%)</title><rect x="728.9" y="161" width="210.4" height="15.0" fill="rgb(254,149,19)" rx="2" ry="2" />
<text text-anchor="" x="731.85" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::DefaultOutputSelec..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::json::parse_json (7,345 samples, 17.83%)</title><rect x="728.9" y="145" width="210.4" height="15.0" fill="rgb(234,70,10)" rx="2" ry="2" />
<text text-anchor="" x="731.85" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::json::parse_json</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (527 samples, 1.28%)</title><rect x="11.5" y="145" width="15.1" height="15.0" fill="rgb(235,106,44)" rx="2" ry="2" />
<text text-anchor="" x="14.52" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tcp_recvmsg (5 samples, 0.01%)</title><rect x="1179.4" y="97" width="0.1" height="15.0" fill="rgb(247,49,48)" rx="2" ry="2" />
<text text-anchor="" x="1182.37" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (45 samples, 0.11%)</title><rect x="939.3" y="145" width="1.3" height="15.0" fill="rgb(246,138,26)" rx="2" ry="2" />
<text text-anchor="" x="942.29" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (516 samples, 1.25%)</title><rect x="945.2" y="161" width="14.7" height="15.0" fill="rgb(230,127,37)" rx="2" ry="2" />
<text text-anchor="" x="948.16" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (5,687 samples, 13.81%)</title><rect x="732.1" y="49" width="163.0" height="15.0" fill="rgb(211,202,25)" rx="2" ry="2" />
<text text-anchor="" x="735.15" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (84 samples, 0.20%)</title><rect x="1000.6" y="145" width="2.4" height="15.0" fill="rgb(238,108,7)" rx="2" ry="2" />
<text text-anchor="" x="1003.62" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::VersionedModelId::VersionedModelId (24 samples, 0.06%)</title><rect x="10.8" y="177" width="0.7" height="15.0" fill="rgb(238,228,45)" rx="2" ry="2" />
<text text-anchor="" x="13.83" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DefaultOutputSelectionState::DefaultOutputSelectionState (7,345 samples, 17.83%)</title><rect x="728.9" y="177" width="210.4" height="15.0" fill="rgb(249,133,49)" rx="2" ry="2" />
<text text-anchor="" x="731.85" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::DefaultOutputSelec..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (23 samples, 0.06%)</title><rect x="58.9" y="145" width="0.6" height="15.0" fill="rgb(239,48,30)" rx="2" ry="2" />
<text text-anchor="" x="61.88" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (20 samples, 0.05%)</title><rect x="1178.9" y="241" width="0.6" height="15.0" fill="rgb(235,205,52)" rx="2" ry="2" />
<text text-anchor="" x="1181.94" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (510 samples, 1.24%)</title><rect x="986.0" y="177" width="14.6" height="15.0" fill="rgb(237,67,33)" rx="2" ry="2" />
<text text-anchor="" x="989.01" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (6 samples, 0.01%)</title><rect x="894.9" y="33" width="0.2" height="15.0" fill="rgb(233,219,47)" rx="2" ry="2" />
<text text-anchor="" x="897.91" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::internal::Stack&lt;rapidjson::CrtAllocator&gt;::Expand&lt;rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; &gt; (1,218 samples, 2.96%)</title><rect x="904.4" y="113" width="34.9" height="15.0" fill="rgb(228,114,19)" rx="2" ry="2" />
<text text-anchor="" x="907.39" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ra..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (25 samples, 0.06%)</title><rect x="1179.5" y="209" width="0.7" height="15.0" fill="rgb(213,98,47)" rx="2" ry="2" />
<text text-anchor="" x="1182.51" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (510 samples, 1.24%)</title><rect x="986.0" y="161" width="14.6" height="15.0" fill="rgb(241,129,26)" rx="2" ry="2" />
<text text-anchor="" x="989.01" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; const&amp;&gt; (141 samples, 0.34%)</title><rect x="1185.8" y="209" width="4.1" height="15.0" fill="rgb(247,137,43)" rx="2" ry="2" />
<text text-anchor="" x="1188.85" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (84 samples, 0.20%)</title><rect x="1000.6" y="161" width="2.4" height="15.0" fill="rgb(209,121,28)" rx="2" ry="2" />
<text text-anchor="" x="1003.62" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::Promise&lt;folly::Unit&gt;::Promise (516 samples, 1.25%)</title><rect x="945.2" y="193" width="14.7" height="15.0" fill="rgb(246,53,17)" rx="2" ry="2" />
<text text-anchor="" x="948.16" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::details::async_log_helper::process_next_msg (47 samples, 0.11%)</title><rect x="30.1" y="225" width="1.3" height="15.0" fill="rgb(243,214,9)" rx="2" ry="2" />
<text text-anchor="" x="33.05" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::details::async_log_helper::worker_loop (47 samples, 0.11%)</title><rect x="30.1" y="241" width="1.3" height="15.0" fill="rgb(238,124,4)" rx="2" ry="2" />
<text text-anchor="" x="33.05" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::sinks::ansicolor_sink::log (42 samples, 0.10%)</title><rect x="30.2" y="209" width="1.2" height="15.0" fill="rgb(222,165,16)" rx="2" ry="2" />
<text text-anchor="" x="33.20" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (36 samples, 0.09%)</title><rect x="1184.8" y="177" width="1.0" height="15.0" fill="rgb(214,166,1)" rx="2" ry="2" />
<text text-anchor="" x="1187.79" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::Buffer&lt;char&gt;::append&lt;char&gt; (42 samples, 0.10%)</title><rect x="30.2" y="193" width="1.2" height="15.0" fill="rgb(227,129,15)" rx="2" ry="2" />
<text text-anchor="" x="33.20" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (362 samples, 0.88%)</title><rect x="1179.5" y="289" width="10.4" height="15.0" fill="rgb(252,148,18)" rx="2" ry="2" />
<text text-anchor="" x="1182.51" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (84 samples, 0.20%)</title><rect x="1000.6" y="177" width="2.4" height="15.0" fill="rgb(226,111,7)" rx="2" ry="2" />
<text text-anchor="" x="1003.62" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (1,218 samples, 2.96%)</title><rect x="904.4" y="81" width="34.9" height="15.0" fill="rgb(243,9,23)" rx="2" ry="2" />
<text text-anchor="" x="907.39" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ma..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (5,701 samples, 13.84%)</title><rect x="731.7" y="65" width="163.4" height="15.0" fill="rgb(216,199,4)" rx="2" ry="2" />
<text text-anchor="" x="734.75" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (315 samples, 0.76%)</title><rect x="966.7" y="161" width="9.1" height="15.0" fill="rgb(212,96,11)" rx="2" ry="2" />
<text text-anchor="" x="969.73" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;*, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt; (14 samples, 0.03%)</title><rect x="1180.3" y="209" width="0.4" height="15.0" fill="rgb(239,50,44)" rx="2" ry="2" />
<text text-anchor="" x="1183.32" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (5 samples, 0.01%)</title><rect x="26.6" y="145" width="0.2" height="15.0" fill="rgb(212,160,14)" rx="2" ry="2" />
<text text-anchor="" x="29.62" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (516 samples, 1.25%)</title><rect x="945.2" y="177" width="14.7" height="15.0" fill="rgb(207,213,27)" rx="2" ry="2" />
<text text-anchor="" x="948.16" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>repeatedly_report_and_clear_metrics (7 samples, 0.02%)</title><rect x="29.9" y="241" width="0.2" height="15.0" fill="rgb(208,120,26)" rx="2" ry="2" />
<text text-anchor="" x="32.85" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (141 samples, 0.34%)</title><rect x="1180.7" y="209" width="4.1" height="15.0" fill="rgb(217,220,27)" rx="2" ry="2" />
<text text-anchor="" x="1183.75" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (118 samples, 0.29%)</title><rect x="78.9" y="177" width="3.4" height="15.0" fill="rgb(231,140,24)" rx="2" ry="2" />
<text text-anchor="" x="81.90" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_handler&lt;void  (673 samples, 1.63%)</title><rect x="10.3" y="209" width="19.3" height="15.0" fill="rgb(233,135,27)" rx="2" ry="2" />
<text text-anchor="" x="13.32" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_execveat_common.isra.33 (4 samples, 0.01%)</title><rect x="1189.9" y="257" width="0.1" height="15.0" fill="rgb(238,178,1)" rx="2" ry="2" />
<text text-anchor="" x="1192.89" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (325 samples, 0.79%)</title><rect x="895.1" y="49" width="9.3" height="15.0" fill="rgb(252,142,20)" rx="2" ry="2" />
<text text-anchor="" x="898.08" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::pattern_formatter::format (5 samples, 0.01%)</title><rect x="30.1" y="209" width="0.1" height="15.0" fill="rgb(233,176,9)" rx="2" ry="2" />
<text text-anchor="" x="33.05" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (41,187 samples, 100%)</title><rect x="10.0" y="321" width="1180.0" height="15.0" fill="rgb(232,227,49)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (28 samples, 0.07%)</title><rect x="30.6" y="129" width="0.8" height="15.0" fill="rgb(242,215,24)" rx="2" ry="2" />
<text text-anchor="" x="33.60" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (45 samples, 0.11%)</title><rect x="32.0" y="177" width="1.3" height="15.0" fill="rgb(239,96,54)" rx="2" ry="2" />
<text text-anchor="" x="35.03" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (237 samples, 0.58%)</title><rect x="959.9" y="145" width="6.8" height="15.0" fill="rgb(247,41,17)" rx="2" ry="2" />
<text text-anchor="" x="962.94" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14 samples, 0.03%)</title><rect x="11.1" y="161" width="0.4" height="15.0" fill="rgb(226,42,40)" rx="2" ry="2" />
<text text-anchor="" x="14.12" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (45 samples, 0.11%)</title><rect x="939.3" y="129" width="1.3" height="15.0" fill="rgb(235,52,53)" rx="2" ry="2" />
<text text-anchor="" x="942.29" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::internal::Stack&lt;rapidjson::CrtAllocator&gt;::Expand&lt;char&gt; (325 samples, 0.79%)</title><rect x="895.1" y="97" width="9.3" height="15.0" fill="rgb(249,108,13)" rx="2" ry="2" />
<text text-anchor="" x="898.08" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>skb_copy_datagram_iter (5 samples, 0.01%)</title><rect x="1179.4" y="81" width="0.1" height="15.0" fill="rgb(225,157,18)" rx="2" ry="2" />
<text text-anchor="" x="1182.37" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (15 samples, 0.04%)</title><rect x="1178.9" y="193" width="0.5" height="15.0" fill="rgb(213,70,3)" rx="2" ry="2" />
<text text-anchor="" x="1181.94" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DoubleVector::serialize (527 samples, 1.28%)</title><rect x="11.5" y="161" width="15.1" height="15.0" fill="rgb(220,133,7)" rx="2" ry="2" />
<text text-anchor="" x="14.52" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>zmq_send (915 samples, 2.22%)</title><rect x="33.3" y="193" width="26.2" height="15.0" fill="rgb(229,103,24)" rx="2" ry="2" />
<text text-anchor="" x="36.32" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >z..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bench_utils::load_cifar (179 samples, 0.43%)</title><rect x="1180.7" y="225" width="5.1" height="15.0" fill="rgb(214,139,15)" rx="2" ry="2" />
<text text-anchor="" x="1183.72" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
