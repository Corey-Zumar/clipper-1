<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="386" onload="init(evt)" viewBox="0 0 1200 386" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="386.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="369" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="369" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (742 samples, 4.39%)</title><rect x="39.6" y="97" width="51.8" height="15.0" fill="rgb(252,61,28)" rx="2" ry="2" />
<text text-anchor="" x="42.60" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (17 samples, 0.10%)</title><rect x="1164.1" y="209" width="1.2" height="15.0" fill="rgb(236,95,1)" rx="2" ry="2" />
<text text-anchor="" x="1167.10" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (19 samples, 0.11%)</title><rect x="1032.8" y="177" width="1.4" height="15.0" fill="rgb(221,103,51)" rx="2" ry="2" />
<text text-anchor="" x="1035.85" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (1,909 samples, 11.29%)</title><rect x="97.5" y="49" width="133.3" height="15.0" fill="rgb(252,138,18)" rx="2" ry="2" />
<text text-anchor="" x="100.48" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::basic_ptree (2 samples, 0.01%)</title><rect x="305.5" y="193" width="0.2" height="15.0" fill="rgb(242,44,6)" rx="2" ry="2" />
<text text-anchor="" x="308.52" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (76 samples, 0.45%)</title><rect x="1018.0" y="177" width="5.4" height="15.0" fill="rgb(208,193,35)" rx="2" ry="2" />
<text text-anchor="" x="1021.05" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (2 samples, 0.01%)</title><rect x="1168.3" y="209" width="0.1" height="15.0" fill="rgb(207,199,16)" rx="2" ry="2" />
<text text-anchor="" x="1171.29" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (7 samples, 0.04%)</title><rect x="976.9" y="145" width="0.4" height="15.0" fill="rgb(221,102,15)" rx="2" ry="2" />
<text text-anchor="" x="979.86" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (92 samples, 0.54%)</title><rect x="358.6" y="193" width="6.4" height="15.0" fill="rgb(216,94,3)" rx="2" ry="2" />
<text text-anchor="" x="361.58" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (3 samples, 0.02%)</title><rect x="304.3" y="161" width="0.2" height="15.0" fill="rgb(239,35,17)" rx="2" ry="2" />
<text text-anchor="" x="307.27" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redisGetReply (896 samples, 5.30%)</title><rect x="28.9" y="193" width="62.6" height="15.0" fill="rgb(241,26,2)" rx="2" ry="2" />
<text text-anchor="" x="31.92" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >redisG..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clone (16,541 samples, 97.86%)</title><rect x="10.8" y="305" width="1154.8" height="15.0" fill="rgb(228,212,54)" rx="2" ry="2" />
<text text-anchor="" x="13.77" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__clone</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::details::async_log_helper::process_next_msg (18 samples, 0.11%)</title><rect x="305.9" y="241" width="1.3" height="15.0" fill="rgb(249,85,1)" rx="2" ry="2" />
<text text-anchor="" x="308.94" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (10 samples, 0.06%)</title><rect x="1164.4" y="177" width="0.7" height="15.0" fill="rgb(213,205,17)" rx="2" ry="2" />
<text text-anchor="" x="1167.45" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bench_utils::load_cifar (166 samples, 0.98%)</title><rect x="1168.4" y="241" width="11.6" height="15.0" fill="rgb(212,179,43)" rx="2" ry="2" />
<text text-anchor="" x="1171.43" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (121 samples, 0.72%)</title><rect x="989.8" y="49" width="8.5" height="15.0" fill="rgb(221,175,7)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DefaultOutputSelectionState::deserialize (2,029 samples, 12.00%)</title><rect x="835.2" y="177" width="141.7" height="15.0" fill="rgb(246,89,10)" rx="2" ry="2" />
<text text-anchor="" x="838.20" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::DefaultOu..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>copy_page_to_iter (3 samples, 0.02%)</title><rect x="1165.3" y="81" width="0.2" height="15.0" fill="rgb(244,145,1)" rx="2" ry="2" />
<text text-anchor="" x="1168.29" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (121 samples, 0.72%)</title><rect x="989.8" y="65" width="8.5" height="15.0" fill="rgb(213,115,54)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TimerSystem&lt;clipper::HighPrecisionClock&gt;::set_timer (14 samples, 0.08%)</title><rect x="1000.9" y="209" width="1.0" height="15.0" fill="rgb(234,163,37)" rx="2" ry="2" />
<text text-anchor="" x="1003.94" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_execve (3 samples, 0.02%)</title><rect x="1189.8" y="289" width="0.2" height="15.0" fill="rgb(211,201,23)" rx="2" ry="2" />
<text text-anchor="" x="1192.79" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (15 samples, 0.09%)</title><rect x="977.3" y="161" width="1.1" height="15.0" fill="rgb(254,228,38)" rx="2" ry="2" />
<text text-anchor="" x="980.35" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (21 samples, 0.12%)</title><rect x="1164.1" y="257" width="1.5" height="15.0" fill="rgb(225,176,2)" rx="2" ry="2" />
<text text-anchor="" x="1167.10" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>run_benchmark (347 samples, 2.05%)</title><rect x="1165.6" y="257" width="24.2" height="15.0" fill="rgb(233,88,50)" rx="2" ry="2" />
<text text-anchor="" x="1168.57" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (945 samples, 5.59%)</title><rect x="237.9" y="81" width="66.0" height="15.0" fill="rgb(214,9,1)" rx="2" ry="2" />
<text text-anchor="" x="240.94" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::thread&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long&amp;&gt;, std::tuple&lt;void  (2 samples, 0.01%)</title><rect x="307.3" y="193" width="0.1" height="15.0" fill="rgb(211,77,32)" rx="2" ry="2" />
<text text-anchor="" x="310.27" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (121 samples, 0.72%)</title><rect x="989.8" y="113" width="8.5" height="15.0" fill="rgb(234,127,51)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (35 samples, 0.21%)</title><rect x="1177.6" y="193" width="2.4" height="15.0" fill="rgb(248,57,43)" rx="2" ry="2" />
<text text-anchor="" x="1180.57" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (1,046 samples, 6.19%)</title><rect x="230.9" y="97" width="73.0" height="15.0" fill="rgb(209,204,20)" rx="2" ry="2" />
<text text-anchor="" x="233.89" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>entry_SYSCALL_64_fastpath (3 samples, 0.02%)</title><rect x="1165.3" y="193" width="0.2" height="15.0" fill="rgb(245,10,40)" rx="2" ry="2" />
<text text-anchor="" x="1168.29" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__redisAppendCommand (1,991 samples, 11.78%)</title><rect x="91.8" y="145" width="139.0" height="15.0" fill="rgb(243,120,24)" rx="2" ry="2" />
<text text-anchor="" x="94.75" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__redisAppendComm..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::multi_index::detail::sequenced_index&lt;boost::multi_index::detail::nth_layer&lt;1, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, boost::multi_index::indexed_by&lt;boost::multi_index::sequenced&lt;boost::multi_index::tag&lt;mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na&gt; &gt;, boost::multi_index::ordered_non_unique&lt;boost::multi_index::tag&lt;boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::subs::by_name, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na&gt;, boost::multi_index::member&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, &amp;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::first&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::vector0&lt;mpl_::na&gt; &gt;::insert (2 samples, 0.01%)</title><rect x="305.7" y="193" width="0.1" height="15.0" fill="rgb(254,210,49)" rx="2" ry="2" />
<text text-anchor="" x="308.66" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (19 samples, 0.11%)</title><rect x="1032.8" y="161" width="1.4" height="15.0" fill="rgb(206,126,25)" rx="2" ry="2" />
<text text-anchor="" x="1035.85" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::PredictionCache::fetch (2 samples, 0.01%)</title><rect x="1000.5" y="193" width="0.2" height="15.0" fill="rgb(212,85,6)" rx="2" ry="2" />
<text text-anchor="" x="1003.52" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (1,048 samples, 6.20%)</title><rect x="230.8" y="113" width="73.1" height="15.0" fill="rgb(223,16,22)" rx="2" ry="2" />
<text text-anchor="" x="233.75" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::json::parse_json (2,029 samples, 12.00%)</title><rect x="835.2" y="161" width="141.7" height="15.0" fill="rgb(242,26,42)" rx="2" ry="2" />
<text text-anchor="" x="838.20" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::json::par..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (4 samples, 0.02%)</title><rect x="1189.5" y="145" width="0.3" height="15.0" fill="rgb(231,193,34)" rx="2" ry="2" />
<text text-anchor="" x="1192.51" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (192 samples, 1.14%)</title><rect x="963.5" y="97" width="13.4" height="15.0" fill="rgb(227,210,23)" rx="2" ry="2" />
<text text-anchor="" x="966.45" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-2.23.so] (2 samples, 0.01%)</title><rect x="10.6" y="289" width="0.2" height="15.0" fill="rgb(253,179,43)" rx="2" ry="2" />
<text text-anchor="" x="13.63" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (164 samples, 0.97%)</title><rect x="978.4" y="145" width="11.4" height="15.0" fill="rgb(243,190,17)" rx="2" ry="2" />
<text text-anchor="" x="981.39" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (15 samples, 0.09%)</title><rect x="977.3" y="177" width="1.1" height="15.0" fill="rgb(243,172,10)" rx="2" ry="2" />
<text text-anchor="" x="980.35" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redisReaderGetReply (896 samples, 5.30%)</title><rect x="28.9" y="161" width="62.6" height="15.0" fill="rgb(205,221,15)" rx="2" ry="2" />
<text text-anchor="" x="31.92" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >redisR..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Hashtable&lt;long, std::pair&lt;long const, clipper::CacheEntry&gt;, std::allocator&lt;std::pair&lt;long const, clipper::CacheEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (2 samples, 0.01%)</title><rect x="1000.5" y="145" width="0.2" height="15.0" fill="rgb(240,197,50)" rx="2" ry="2" />
<text text-anchor="" x="1003.52" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::EndObject (1,764 samples, 10.44%)</title><rect x="835.2" y="129" width="123.2" height="15.0" fill="rgb(208,146,23)" rx="2" ry="2" />
<text text-anchor="" x="838.20" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >rapidjson::Gene..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DefaultOutputSelectionPolicy::deserialize (2,029 samples, 12.00%)</title><rect x="835.2" y="209" width="141.7" height="15.0" fill="rgb(210,84,38)" rx="2" ry="2" />
<text text-anchor="" x="838.20" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::DefaultOu..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>realloc (1,048 samples, 6.20%)</title><rect x="230.8" y="129" width="73.1" height="15.0" fill="rgb(236,22,17)" rx="2" ry="2" />
<text text-anchor="" x="233.75" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >realloc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clear_user (2 samples, 0.01%)</title><rect x="1189.8" y="225" width="0.1" height="15.0" fill="rgb(215,13,37)" rx="2" ry="2" />
<text text-anchor="" x="1192.79" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (19 samples, 0.11%)</title><rect x="1032.8" y="193" width="1.4" height="15.0" fill="rgb(248,169,20)" rx="2" ry="2" />
<text text-anchor="" x="1035.85" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::QueryProcessor::predict (2,850 samples, 16.86%)</title><rect x="835.2" y="225" width="199.0" height="15.0" fill="rgb(231,42,20)" rx="2" ry="2" />
<text text-anchor="" x="838.20" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::QueryProcessor::p..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>return_from_execve (3 samples, 0.02%)</title><rect x="1189.8" y="305" width="0.2" height="15.0" fill="rgb(208,113,16)" rx="2" ry="2" />
<text text-anchor="" x="1192.79" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>search_binary_handler (3 samples, 0.02%)</title><rect x="1189.8" y="257" width="0.2" height="15.0" fill="rgb(220,129,52)" rx="2" ry="2" />
<text text-anchor="" x="1192.79" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::thread::_M_start_thread (2 samples, 0.01%)</title><rect x="327.2" y="209" width="0.2" height="15.0" fill="rgb(228,97,25)" rx="2" ry="2" />
<text text-anchor="" x="330.24" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (23 samples, 0.14%)</title><rect x="1188.2" y="161" width="1.6" height="15.0" fill="rgb(239,120,37)" rx="2" ry="2" />
<text text-anchor="" x="1191.18" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (23 samples, 0.14%)</title><rect x="1188.2" y="177" width="1.6" height="15.0" fill="rgb(225,218,32)" rx="2" ry="2" />
<text text-anchor="" x="1191.18" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>inet_recvmsg (3 samples, 0.02%)</title><rect x="1165.3" y="129" width="0.2" height="15.0" fill="rgb(212,11,9)" rx="2" ry="2" />
<text text-anchor="" x="1168.29" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::basic_ptree (2 samples, 0.01%)</title><rect x="305.7" y="177" width="0.1" height="15.0" fill="rgb(222,124,34)" rx="2" ry="2" />
<text text-anchor="" x="308.66" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (136 samples, 0.80%)</title><rect x="1023.4" y="193" width="9.4" height="15.0" fill="rgb(221,105,13)" rx="2" ry="2" />
<text text-anchor="" x="1026.35" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (17 samples, 0.10%)</title><rect x="326.0" y="193" width="1.2" height="15.0" fill="rgb(208,177,48)" rx="2" ry="2" />
<text text-anchor="" x="329.05" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-2.23.so] (2 samples, 0.01%)</title><rect x="10.6" y="225" width="0.2" height="15.0" fill="rgb(242,121,12)" rx="2" ry="2" />
<text text-anchor="" x="13.63" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (164 samples, 0.97%)</title><rect x="978.4" y="113" width="11.4" height="15.0" fill="rgb(248,101,11)" rx="2" ry="2" />
<text text-anchor="" x="981.39" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (1,746 samples, 10.33%)</title><rect x="836.5" y="97" width="121.9" height="15.0" fill="rgb(249,199,24)" rx="2" ry="2" />
<text text-anchor="" x="839.46" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >malloc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (3 samples, 0.02%)</title><rect x="28.6" y="145" width="0.2" height="15.0" fill="rgb(253,27,51)" rx="2" ry="2" />
<text text-anchor="" x="31.64" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (136 samples, 0.80%)</title><rect x="1023.4" y="177" width="9.4" height="15.0" fill="rgb(220,73,28)" rx="2" ry="2" />
<text text-anchor="" x="1026.35" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::thread::_Impl&lt;std::_Bind_simple&lt;clipper::rpc::RPCService::start (289 samples, 1.71%)</title><rect x="307.2" y="257" width="20.2" height="15.0" fill="rgb(222,92,2)" rx="2" ry="2" />
<text text-anchor="" x="310.20" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;clipper::InflightMessage, std::allocator&lt;clipper::InflightMessage&gt; &gt;::_M_emplace_back_aux&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;&amp;, int&amp;, clipper::VersionedModelId&amp;, int&amp;, std::shared_ptr&lt;clipper::Input&gt;&amp;&gt; (15 samples, 0.09%)</title><rect x="27.3" y="193" width="1.1" height="15.0" fill="rgb(247,73,19)" rx="2" ry="2" />
<text text-anchor="" x="30.31" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (2 samples, 0.01%)</title><rect x="305.7" y="97" width="0.1" height="15.0" fill="rgb(240,95,36)" rx="2" ry="2" />
<text text-anchor="" x="308.66" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (51 samples, 0.30%)</title><rect x="1010.2" y="193" width="3.5" height="15.0" fill="rgb(252,50,29)" rx="2" ry="2" />
<text text-anchor="" x="1013.16" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (73 samples, 0.43%)</title><rect x="958.4" y="65" width="5.1" height="15.0" fill="rgb(236,58,11)" rx="2" ry="2" />
<text text-anchor="" x="961.36" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (164 samples, 0.97%)</title><rect x="978.4" y="97" width="11.4" height="15.0" fill="rgb(220,58,9)" rx="2" ry="2" />
<text text-anchor="" x="981.39" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="91.6" y="129" width="0.2" height="15.0" fill="rgb(237,135,5)" rx="2" ry="2" />
<text text-anchor="" x="94.61" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (21 samples, 0.12%)</title><rect x="1164.1" y="273" width="1.5" height="15.0" fill="rgb(221,11,48)" rx="2" ry="2" />
<text text-anchor="" x="1167.10" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (2 samples, 0.01%)</title><rect x="91.6" y="113" width="0.2" height="15.0" fill="rgb(242,28,24)" rx="2" ry="2" />
<text text-anchor="" x="94.61" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TaskExecutor::schedule_predictions (31 samples, 0.18%)</title><rect x="998.8" y="209" width="2.1" height="15.0" fill="rgb(211,229,33)" rx="2" ry="2" />
<text text-anchor="" x="1001.78" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>realloc (1,991 samples, 11.78%)</title><rect x="91.8" y="97" width="139.0" height="15.0" fill="rgb(244,188,50)" rx="2" ry="2" />
<text text-anchor="" x="94.75" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >realloc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sock_recvmsg (3 samples, 0.02%)</title><rect x="1165.3" y="145" width="0.2" height="15.0" fill="rgb(237,167,31)" rx="2" ry="2" />
<text text-anchor="" x="1168.29" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (121 samples, 0.72%)</title><rect x="989.8" y="129" width="8.5" height="15.0" fill="rgb(221,31,16)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (347 samples, 2.05%)</title><rect x="1165.6" y="289" width="24.2" height="15.0" fill="rgb(239,39,23)" rx="2" ry="2" />
<text text-anchor="" x="1168.57" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redisProcessCallbacks (898 samples, 5.31%)</title><rect x="28.9" y="209" width="62.7" height="15.0" fill="rgb(222,151,16)" rx="2" ry="2" />
<text text-anchor="" x="31.92" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >redisP..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (10 samples, 0.06%)</title><rect x="306.5" y="177" width="0.7" height="15.0" fill="rgb(243,84,34)" rx="2" ry="2" />
<text text-anchor="" x="309.50" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (347 samples, 2.05%)</title><rect x="1165.6" y="305" width="24.2" height="15.0" fill="rgb(241,35,20)" rx="2" ry="2" />
<text text-anchor="" x="1168.57" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tcp_recvmsg (3 samples, 0.02%)</title><rect x="1165.3" y="113" width="0.2" height="15.0" fill="rgb(241,94,46)" rx="2" ry="2" />
<text text-anchor="" x="1168.29" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TaskExecutor::on_container_ready (2 samples, 0.01%)</title><rect x="28.4" y="241" width="0.2" height="15.0" fill="rgb(219,138,27)" rx="2" ry="2" />
<text text-anchor="" x="31.43" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (5 samples, 0.03%)</title><rect x="303.9" y="129" width="0.4" height="15.0" fill="rgb(230,30,2)" rx="2" ry="2" />
<text text-anchor="" x="306.92" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (2 samples, 0.01%)</title><rect x="305.5" y="129" width="0.2" height="15.0" fill="rgb(213,120,18)" rx="2" ry="2" />
<text text-anchor="" x="308.52" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clear_user (2 samples, 0.01%)</title><rect x="1189.8" y="209" width="0.1" height="15.0" fill="rgb(208,69,4)" rx="2" ry="2" />
<text text-anchor="" x="1192.79" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redisFormatSdsCommandArgv (1,053 samples, 6.23%)</title><rect x="230.8" y="161" width="73.5" height="15.0" fill="rgb(243,25,43)" rx="2" ry="2" />
<text text-anchor="" x="233.75" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >redisFor..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-2.23.so] (3 samples, 0.02%)</title><rect x="10.6" y="305" width="0.2" height="15.0" fill="rgb(244,213,32)" rx="2" ry="2" />
<text text-anchor="" x="13.56" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (76 samples, 0.45%)</title><rect x="1018.0" y="193" width="5.4" height="15.0" fill="rgb(212,164,54)" rx="2" ry="2" />
<text text-anchor="" x="1021.05" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TaskExecutor::TaskExecutor (2 samples, 0.01%)</title><rect x="91.5" y="145" width="0.1" height="15.0" fill="rgb(235,111,15)" rx="2" ry="2" />
<text text-anchor="" x="94.47" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (118 samples, 0.70%)</title><rect x="1001.9" y="161" width="8.3" height="15.0" fill="rgb(214,59,13)" rx="2" ry="2" />
<text text-anchor="" x="1004.92" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::log_info_formatted&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (121 samples, 0.72%)</title><rect x="989.8" y="177" width="8.5" height="15.0" fill="rgb(206,76,17)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (76 samples, 0.45%)</title><rect x="1018.0" y="161" width="5.4" height="15.0" fill="rgb(254,13,33)" rx="2" ry="2" />
<text text-anchor="" x="1021.05" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::Query::Query (22 samples, 0.13%)</title><rect x="976.9" y="209" width="1.5" height="15.0" fill="rgb(224,45,23)" rx="2" ry="2" />
<text text-anchor="" x="979.86" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_buckets (6 samples, 0.04%)</title><rect x="998.3" y="97" width="0.4" height="15.0" fill="rgb(241,225,23)" rx="2" ry="2" />
<text text-anchor="" x="1001.29" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_recvfrom (3 samples, 0.02%)</title><rect x="1165.3" y="177" width="0.2" height="15.0" fill="rgb(217,39,6)" rx="2" ry="2" />
<text text-anchor="" x="1168.29" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::put_child (2 samples, 0.01%)</title><rect x="305.7" y="209" width="0.1" height="15.0" fill="rgb(227,1,30)" rx="2" ry="2" />
<text text-anchor="" x="308.66" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (136 samples, 0.80%)</title><rect x="1023.4" y="209" width="9.4" height="15.0" fill="rgb(254,77,17)" rx="2" ry="2" />
<text text-anchor="" x="1026.35" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_recv (3 samples, 0.02%)</title><rect x="1165.3" y="209" width="0.2" height="15.0" fill="rgb(231,57,53)" rx="2" ry="2" />
<text text-anchor="" x="1168.29" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (131 samples, 0.78%)</title><rect x="1168.4" y="225" width="9.2" height="15.0" fill="rgb(213,44,4)" rx="2" ry="2" />
<text text-anchor="" x="1171.43" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redisGetReplyFromReader (896 samples, 5.30%)</title><rect x="28.9" y="177" width="62.6" height="15.0" fill="rgb(218,10,46)" rx="2" ry="2" />
<text text-anchor="" x="31.92" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >redisG..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (164 samples, 0.97%)</title><rect x="978.4" y="161" width="11.4" height="15.0" fill="rgb(214,93,39)" rx="2" ry="2" />
<text text-anchor="" x="981.39" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libhiredis.so.0.13] (896 samples, 5.30%)</title><rect x="28.9" y="145" width="62.6" height="15.0" fill="rgb(237,82,6)" rx="2" ry="2" />
<text text-anchor="" x="31.92" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libhi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (13 samples, 0.08%)</title><rect x="304.5" y="129" width="0.9" height="15.0" fill="rgb(250,144,32)" rx="2" ry="2" />
<text text-anchor="" x="307.48" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::redis::send_cmd_with_reply&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (128 samples, 0.76%)</title><rect x="989.8" y="193" width="9.0" height="15.0" fill="rgb(238,58,1)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (164 samples, 0.97%)</title><rect x="978.4" y="81" width="11.4" height="15.0" fill="rgb(211,25,12)" rx="2" ry="2" />
<text text-anchor="" x="981.39" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_calloc (895 samples, 5.30%)</title><rect x="28.9" y="129" width="62.5" height="15.0" fill="rgb(222,198,5)" rx="2" ry="2" />
<text text-anchor="" x="31.92" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>realloc (73 samples, 0.43%)</title><rect x="958.4" y="97" width="5.1" height="15.0" fill="rgb(208,137,48)" rx="2" ry="2" />
<text text-anchor="" x="961.36" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseString&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt; (73 samples, 0.43%)</title><rect x="958.4" y="129" width="5.1" height="15.0" fill="rgb(207,84,9)" rx="2" ry="2" />
<text text-anchor="" x="961.36" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (7 samples, 0.04%)</title><rect x="976.9" y="177" width="0.4" height="15.0" fill="rgb(208,0,41)" rx="2" ry="2" />
<text text-anchor="" x="979.86" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (118 samples, 0.70%)</title><rect x="1001.9" y="177" width="8.3" height="15.0" fill="rgb(212,24,6)" rx="2" ry="2" />
<text text-anchor="" x="1004.92" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_handler&lt;void  (253 samples, 1.50%)</title><rect x="10.8" y="225" width="17.6" height="15.0" fill="rgb(220,112,14)" rx="2" ry="2" />
<text text-anchor="" x="13.77" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;*, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt; (13 samples, 0.08%)</title><rect x="1167.5" y="225" width="0.9" height="15.0" fill="rgb(227,153,1)" rx="2" ry="2" />
<text text-anchor="" x="1170.52" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (62 samples, 0.37%)</title><rect x="1013.7" y="193" width="4.3" height="15.0" fill="rgb(216,63,21)" rx="2" ry="2" />
<text text-anchor="" x="1016.72" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sdsMakeRoomFor (1,048 samples, 6.20%)</title><rect x="230.8" y="145" width="73.1" height="15.0" fill="rgb(206,198,42)" rx="2" ry="2" />
<text text-anchor="" x="233.75" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sdsMakeR..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (4 samples, 0.02%)</title><rect x="306.2" y="177" width="0.3" height="15.0" fill="rgb(227,46,9)" rx="2" ry="2" />
<text text-anchor="" x="309.22" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;folly::Future&lt;folly::Unit&gt;, std::allocator&lt;folly::Future&lt;folly::Unit&gt; &gt; &gt;::emplace_back&lt;folly::Future&lt;folly::Unit&gt; &gt; (19 samples, 0.11%)</title><rect x="1032.8" y="209" width="1.4" height="15.0" fill="rgb(237,95,54)" rx="2" ry="2" />
<text text-anchor="" x="1035.85" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::StateDB::get (292 samples, 1.73%)</title><rect x="978.4" y="209" width="20.4" height="15.0" fill="rgb(241,58,50)" rx="2" ry="2" />
<text text-anchor="" x="981.39" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (4 samples, 0.02%)</title><rect x="27.0" y="145" width="0.3" height="15.0" fill="rgb(206,117,1)" rx="2" ry="2" />
<text text-anchor="" x="30.03" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (2 samples, 0.01%)</title><rect x="1168.3" y="177" width="0.1" height="15.0" fill="rgb(210,85,44)" rx="2" ry="2" />
<text text-anchor="" x="1171.29" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ev_run (3,964 samples, 23.45%)</title><rect x="28.6" y="241" width="276.8" height="15.0" fill="rgb(248,167,48)" rx="2" ry="2" />
<text text-anchor="" x="31.64" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ev_run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>load_elf_binary (3 samples, 0.02%)</title><rect x="1189.8" y="241" width="0.2" height="15.0" fill="rgb(247,130,18)" rx="2" ry="2" />
<text text-anchor="" x="1192.79" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (15 samples, 0.09%)</title><rect x="977.3" y="145" width="1.1" height="15.0" fill="rgb(216,39,43)" rx="2" ry="2" />
<text text-anchor="" x="980.35" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::basic_ptree (2 samples, 0.01%)</title><rect x="305.5" y="209" width="0.2" height="15.0" fill="rgb(234,75,31)" rx="2" ry="2" />
<text text-anchor="" x="308.52" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (23 samples, 0.14%)</title><rect x="1188.2" y="193" width="1.6" height="15.0" fill="rgb(224,81,44)" rx="2" ry="2" />
<text text-anchor="" x="1191.18" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::RPCService::receive_message (3 samples, 0.02%)</title><rect x="307.3" y="225" width="0.2" height="15.0" fill="rgb(232,98,17)" rx="2" ry="2" />
<text text-anchor="" x="310.27" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libstdc++.so.6.0.21] (16,520 samples, 97.74%)</title><rect x="10.8" y="273" width="1153.3" height="15.0" fill="rgb(214,123,9)" rx="2" ry="2" />
<text text-anchor="" x="13.77" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libstdc++.so.6.0.21]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start_thread (16,541 samples, 97.86%)</title><rect x="10.8" y="289" width="1154.8" height="15.0" fill="rgb(219,32,27)" rx="2" ry="2" />
<text text-anchor="" x="13.77" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >start_thread</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; const&amp;&gt; (140 samples, 0.83%)</title><rect x="1180.0" y="225" width="9.8" height="15.0" fill="rgb(247,69,43)" rx="2" ry="2" />
<text text-anchor="" x="1183.02" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::thread::_Impl&lt;std::_Bind_simple&lt;run_benchmark (11,985 samples, 70.91%)</title><rect x="327.4" y="257" width="836.7" height="15.0" fill="rgb(227,75,38)" rx="2" ry="2" />
<text text-anchor="" x="330.38" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::thread::_Impl&lt;std::_Bind_simple&lt;run_benchmark</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-2.23.so] (2 samples, 0.01%)</title><rect x="10.6" y="257" width="0.2" height="15.0" fill="rgb(236,177,35)" rx="2" ry="2" />
<text text-anchor="" x="13.63" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::collectAny&lt;__gnu_cxx::__normal_iterator&lt;folly::Future&lt;folly::Unit&gt;*, std::vector&lt;folly::Future&lt;folly::Unit&gt;, std::allocator&lt;folly::Future&lt;folly::Unit&gt; &gt; &gt; &gt; &gt; (62 samples, 0.37%)</title><rect x="1013.7" y="209" width="4.3" height="15.0" fill="rgb(208,143,13)" rx="2" ry="2" />
<text text-anchor="" x="1016.72" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Hashtable&lt;long, std::pair&lt;long const, clipper::CacheEntry&gt;, std::allocator&lt;std::pair&lt;long const, clipper::CacheEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;unsigned long, clipper::CacheEntry&gt; &gt; (2 samples, 0.01%)</title><rect x="1000.5" y="177" width="0.2" height="15.0" fill="rgb(216,58,50)" rx="2" ry="2" />
<text text-anchor="" x="1003.52" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (1,861 samples, 11.01%)</title><rect x="1034.2" y="225" width="129.9" height="15.0" fill="rgb(239,153,38)" rx="2" ry="2" />
<text text-anchor="" x="1037.17" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >operator new</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (17 samples, 0.10%)</title><rect x="326.0" y="177" width="1.2" height="15.0" fill="rgb(241,178,46)" rx="2" ry="2" />
<text text-anchor="" x="329.05" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (3 samples, 0.02%)</title><rect x="304.3" y="129" width="0.2" height="15.0" fill="rgb(212,63,46)" rx="2" ry="2" />
<text text-anchor="" x="307.27" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (347 samples, 2.05%)</title><rect x="1165.6" y="273" width="24.2" height="15.0" fill="rgb(218,30,15)" rx="2" ry="2" />
<text text-anchor="" x="1168.57" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >m..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (7 samples, 0.04%)</title><rect x="976.9" y="161" width="0.4" height="15.0" fill="rgb(225,157,25)" rx="2" ry="2" />
<text text-anchor="" x="979.86" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (8 samples, 0.05%)</title><rect x="835.2" y="113" width="0.6" height="15.0" fill="rgb(250,91,50)" rx="2" ry="2" />
<text text-anchor="" x="838.20" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redisAsyncCommandArgv (3,046 samples, 18.02%)</title><rect x="91.6" y="177" width="212.7" height="15.0" fill="rgb(215,147,45)" rx="2" ry="2" />
<text text-anchor="" x="94.61" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >redisAsyncCommandArgv</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (192 samples, 1.14%)</title><rect x="963.5" y="81" width="13.4" height="15.0" fill="rgb(207,49,11)" rx="2" ry="2" />
<text text-anchor="" x="966.45" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (2 samples, 0.01%)</title><rect x="305.5" y="161" width="0.2" height="15.0" fill="rgb(233,195,15)" rx="2" ry="2" />
<text text-anchor="" x="308.52" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redox::Redox::commandSync&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (7 samples, 0.04%)</title><rect x="998.3" y="177" width="0.5" height="15.0" fill="rgb(241,182,4)" rx="2" ry="2" />
<text text-anchor="" x="1001.29" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="305.5" y="145" width="0.2" height="15.0" fill="rgb(216,228,41)" rx="2" ry="2" />
<text text-anchor="" x="308.52" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::internal::Stack&lt;rapidjson::CrtAllocator&gt;::Expand&lt;rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; &gt; (192 samples, 1.14%)</title><rect x="963.5" y="129" width="13.4" height="15.0" fill="rgb(230,211,5)" rx="2" ry="2" />
<text text-anchor="" x="966.45" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (15 samples, 0.09%)</title><rect x="1164.2" y="193" width="1.0" height="15.0" fill="rgb(208,28,25)" rx="2" ry="2" />
<text text-anchor="" x="1167.17" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sdscatlen (1,991 samples, 11.78%)</title><rect x="91.8" y="129" width="139.0" height="15.0" fill="rgb(239,167,49)" rx="2" ry="2" />
<text text-anchor="" x="94.75" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sdscatlen</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (895 samples, 5.30%)</title><rect x="28.9" y="113" width="62.5" height="15.0" fill="rgb(213,155,7)" rx="2" ry="2" />
<text text-anchor="" x="31.92" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (10 samples, 0.06%)</title><rect x="306.5" y="145" width="0.7" height="15.0" fill="rgb(249,46,10)" rx="2" ry="2" />
<text text-anchor="" x="309.50" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::PredictionRequest::serialize (235 samples, 1.39%)</title><rect x="10.9" y="193" width="16.4" height="15.0" fill="rgb(245,122,52)" rx="2" ry="2" />
<text text-anchor="" x="13.91" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redox::Command&lt;redisReply*&gt;::processReply (2 samples, 0.01%)</title><rect x="91.5" y="193" width="0.1" height="15.0" fill="rgb(254,98,50)" rx="2" ry="2" />
<text text-anchor="" x="94.47" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (7 samples, 0.04%)</title><rect x="976.9" y="193" width="0.4" height="15.0" fill="rgb(241,30,4)" rx="2" ry="2" />
<text text-anchor="" x="979.86" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-2.23.so] (2 samples, 0.01%)</title><rect x="10.6" y="209" width="0.2" height="15.0" fill="rgb(218,18,14)" rx="2" ry="2" />
<text text-anchor="" x="13.63" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::futures::detail::FSM&lt;folly::futures::detail::State&gt;::updateState&lt;void folly::futures::detail::Core&lt;std::pair&lt;unsigned long, folly::Try&lt;folly::Unit&gt; &gt; &gt;::setCallback&lt;std::enable_if&lt;!folly::futures::detail::callableResult&lt;std::pair&lt;unsigned long, folly::Try&lt;folly::Unit&gt; &gt;, {lambda (76 samples, 0.45%)</title><rect x="1018.0" y="209" width="5.4" height="15.0" fill="rgb(249,25,53)" rx="2" ry="2" />
<text text-anchor="" x="1021.05" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (231 samples, 1.37%)</title><rect x="10.9" y="161" width="16.1" height="15.0" fill="rgb(242,82,16)" rx="2" ry="2" />
<text text-anchor="" x="13.91" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::Promise&lt;folly::Unit&gt;::Promise (118 samples, 0.70%)</title><rect x="1001.9" y="209" width="8.3" height="15.0" fill="rgb(231,143,40)" rx="2" ry="2" />
<text text-anchor="" x="1004.92" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (51 samples, 0.30%)</title><rect x="1010.2" y="161" width="3.5" height="15.0" fill="rgb(251,217,19)" rx="2" ry="2" />
<text text-anchor="" x="1013.16" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (121 samples, 0.72%)</title><rect x="989.8" y="33" width="8.5" height="15.0" fill="rgb(220,130,19)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::RPCService::send_messages (283 samples, 1.67%)</title><rect x="307.5" y="225" width="19.7" height="15.0" fill="rgb(253,63,17)" rx="2" ry="2" />
<text text-anchor="" x="310.48" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>repeatedly_report_and_clear_metrics (8 samples, 0.05%)</title><rect x="305.4" y="257" width="0.5" height="15.0" fill="rgb(232,72,6)" rx="2" ry="2" />
<text text-anchor="" x="308.38" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (439 samples, 2.60%)</title><rect x="327.4" y="241" width="30.6" height="15.0" fill="rgb(230,114,35)" rx="2" ry="2" />
<text text-anchor="" x="330.38" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[l..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (4 samples, 0.02%)</title><rect x="27.0" y="177" width="0.3" height="15.0" fill="rgb(230,196,20)" rx="2" ry="2" />
<text text-anchor="" x="30.03" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (2 samples, 0.01%)</title><rect x="305.7" y="129" width="0.1" height="15.0" fill="rgb(208,26,22)" rx="2" ry="2" />
<text text-anchor="" x="308.66" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>folly::collect&lt;__gnu_cxx::__normal_iterator&lt;folly::Future&lt;folly::Unit&gt;*, std::vector&lt;folly::Future&lt;folly::Unit&gt;, std::allocator&lt;folly::Future&lt;folly::Unit&gt; &gt; &gt; &gt; &gt; (51 samples, 0.30%)</title><rect x="1010.2" y="209" width="3.5" height="15.0" fill="rgb(234,167,16)" rx="2" ry="2" />
<text text-anchor="" x="1013.16" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::generate_redis_key (164 samples, 0.97%)</title><rect x="978.4" y="193" width="11.4" height="15.0" fill="rgb(212,74,51)" rx="2" ry="2" />
<text text-anchor="" x="981.39" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (17 samples, 0.10%)</title><rect x="326.0" y="161" width="1.2" height="15.0" fill="rgb(239,146,6)" rx="2" ry="2" />
<text text-anchor="" x="329.05" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (10 samples, 0.06%)</title><rect x="1164.4" y="161" width="0.7" height="15.0" fill="rgb(217,145,19)" rx="2" ry="2" />
<text text-anchor="" x="1167.45" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (6 samples, 0.04%)</title><rect x="998.3" y="81" width="0.4" height="15.0" fill="rgb(215,139,3)" rx="2" ry="2" />
<text text-anchor="" x="1001.29" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (1,861 samples, 11.01%)</title><rect x="1034.2" y="209" width="129.9" height="15.0" fill="rgb(242,58,43)" rx="2" ry="2" />
<text text-anchor="" x="1037.17" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >malloc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (73 samples, 0.43%)</title><rect x="958.4" y="81" width="5.1" height="15.0" fill="rgb(247,18,2)" rx="2" ry="2" />
<text text-anchor="" x="961.36" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;::vector (140 samples, 0.83%)</title><rect x="1180.0" y="209" width="9.8" height="15.0" fill="rgb(237,32,17)" rx="2" ry="2" />
<text text-anchor="" x="1183.02" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libhiredis.so.0.13] (2 samples, 0.01%)</title><rect x="91.6" y="145" width="0.2" height="15.0" fill="rgb(226,121,24)" rx="2" ry="2" />
<text text-anchor="" x="94.61" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (164 samples, 0.97%)</title><rect x="978.4" y="177" width="11.4" height="15.0" fill="rgb(244,225,17)" rx="2" ry="2" />
<text text-anchor="" x="981.39" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_emplace_back_aux&lt;unsigned long&gt; (13 samples, 0.08%)</title><rect x="304.5" y="177" width="0.9" height="15.0" fill="rgb(215,173,14)" rx="2" ry="2" />
<text text-anchor="" x="307.48" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>realloc (3 samples, 0.02%)</title><rect x="28.6" y="177" width="0.2" height="15.0" fill="rgb(205,12,15)" rx="2" ry="2" />
<text text-anchor="" x="31.64" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (3 samples, 0.02%)</title><rect x="28.6" y="129" width="0.2" height="15.0" fill="rgb(253,110,14)" rx="2" ry="2" />
<text text-anchor="" x="31.64" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Hashtable&lt;long, std::pair&lt;long const, redox::Command&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::allocator&lt;std::pair&lt;long const, redox::Command&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (6 samples, 0.04%)</title><rect x="998.3" y="129" width="0.4" height="15.0" fill="rgb(215,31,37)" rx="2" ry="2" />
<text text-anchor="" x="1001.29" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ev_feed_event (3 samples, 0.02%)</title><rect x="28.6" y="209" width="0.2" height="15.0" fill="rgb(226,75,36)" rx="2" ry="2" />
<text text-anchor="" x="31.64" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Hashtable&lt;long, std::pair&lt;long const, redox::Command&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::allocator&lt;std::pair&lt;long const, redox::Command&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (6 samples, 0.04%)</title><rect x="998.3" y="113" width="0.4" height="15.0" fill="rgb(214,115,28)" rx="2" ry="2" />
<text text-anchor="" x="1001.29" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (10 samples, 0.06%)</title><rect x="306.5" y="161" width="0.7" height="15.0" fill="rgb(217,54,14)" rx="2" ry="2" />
<text text-anchor="" x="309.50" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (266 samples, 1.57%)</title><rect x="307.5" y="193" width="18.5" height="15.0" fill="rgb(248,184,45)" rx="2" ry="2" />
<text text-anchor="" x="310.48" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="305.7" y="113" width="0.1" height="15.0" fill="rgb(226,5,44)" rx="2" ry="2" />
<text text-anchor="" x="308.66" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_handler&lt;void  (2 samples, 0.01%)</title><rect x="91.5" y="161" width="0.1" height="15.0" fill="rgb(227,210,15)" rx="2" ry="2" />
<text text-anchor="" x="94.47" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (51 samples, 0.30%)</title><rect x="1010.2" y="177" width="3.5" height="15.0" fill="rgb(223,95,31)" rx="2" ry="2" />
<text text-anchor="" x="1013.16" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>end_to_end_benc (16,902 samples, 100.00%)</title><rect x="10.0" y="321" width="1180.0" height="15.0" fill="rgb(210,36,8)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >end_to_end_benc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (164 samples, 0.97%)</title><rect x="978.4" y="129" width="11.4" height="15.0" fill="rgb(219,132,19)" rx="2" ry="2" />
<text text-anchor="" x="981.39" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-2.23.so] (2 samples, 0.01%)</title><rect x="10.6" y="241" width="0.2" height="15.0" fill="rgb(246,65,11)" rx="2" ry="2" />
<text text-anchor="" x="13.63" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (121 samples, 0.72%)</title><rect x="989.8" y="81" width="8.5" height="15.0" fill="rgb(222,69,22)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseObject&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt; (2,029 samples, 12.00%)</title><rect x="835.2" y="145" width="141.7" height="15.0" fill="rgb(224,165,41)" rx="2" ry="2" />
<text text-anchor="" x="838.20" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >rapidjson::Generic..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (11 samples, 0.07%)</title><rect x="1167.5" y="209" width="0.8" height="15.0" fill="rgb(215,20,6)" rx="2" ry="2" />
<text text-anchor="" x="1170.52" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::ThreadPool::worker (255 samples, 1.51%)</title><rect x="10.8" y="257" width="17.8" height="15.0" fill="rgb(205,109,3)" rx="2" ry="2" />
<text text-anchor="" x="13.77" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::Logger::get_formatted_tag (121 samples, 0.72%)</title><rect x="989.8" y="145" width="8.5" height="15.0" fill="rgb(247,11,9)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (1,991 samples, 11.78%)</title><rect x="91.8" y="65" width="139.0" height="15.0" fill="rgb(226,188,31)" rx="2" ry="2" />
<text text-anchor="" x="94.75" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redox::Redox::connect (2 samples, 0.01%)</title><rect x="327.2" y="225" width="0.2" height="15.0" fill="rgb(229,31,50)" rx="2" ry="2" />
<text text-anchor="" x="330.24" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (13 samples, 0.08%)</title><rect x="304.5" y="145" width="0.9" height="15.0" fill="rgb(224,116,45)" rx="2" ry="2" />
<text text-anchor="" x="307.48" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libhiredis.so.0.13] (1,993 samples, 11.79%)</title><rect x="91.6" y="161" width="139.2" height="15.0" fill="rgb(205,148,16)" rx="2" ry="2" />
<text text-anchor="" x="94.61" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libhiredis.so.0...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (121 samples, 0.72%)</title><rect x="989.8" y="97" width="8.5" height="15.0" fill="rgb(213,14,20)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (4 samples, 0.02%)</title><rect x="1164.2" y="177" width="0.2" height="15.0" fill="rgb(208,107,43)" rx="2" ry="2" />
<text text-anchor="" x="1167.17" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DefaultOutputSelectionState::DefaultOutputSelectionState (2,029 samples, 12.00%)</title><rect x="835.2" y="193" width="141.7" height="15.0" fill="rgb(223,57,11)" rx="2" ry="2" />
<text text-anchor="" x="838.20" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clipper::DefaultOu..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (13 samples, 0.08%)</title><rect x="304.5" y="161" width="0.9" height="15.0" fill="rgb(213,49,8)" rx="2" ry="2" />
<text text-anchor="" x="307.48" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_create@@GLIBC_2.2.5 (2 samples, 0.01%)</title><rect x="307.3" y="161" width="0.1" height="15.0" fill="rgb(226,198,25)" rx="2" ry="2" />
<text text-anchor="" x="310.27" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (1,733 samples, 10.25%)</title><rect x="837.4" y="65" width="121.0" height="15.0" fill="rgb(230,102,7)" rx="2" ry="2" />
<text text-anchor="" x="840.37" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::metrics::MetricsRegistry::report_metrics[abi:cxx11] (5 samples, 0.03%)</title><rect x="305.5" y="225" width="0.4" height="15.0" fill="rgb(227,147,21)" rx="2" ry="2" />
<text text-anchor="" x="308.52" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (4 samples, 0.02%)</title><rect x="27.0" y="161" width="0.3" height="15.0" fill="rgb(209,131,5)" rx="2" ry="2" />
<text text-anchor="" x="30.03" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;clipper::VersionedModelId, std::allocator&lt;clipper::VersionedModelId&gt; &gt;::vector (15 samples, 0.09%)</title><rect x="977.3" y="193" width="1.1" height="15.0" fill="rgb(241,17,23)" rx="2" ry="2" />
<text text-anchor="" x="980.35" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>zmq_send (283 samples, 1.67%)</title><rect x="307.5" y="209" width="19.7" height="15.0" fill="rgb(208,90,35)" rx="2" ry="2" />
<text text-anchor="" x="310.48" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libev.so.4.0.0] (3 samples, 0.02%)</title><rect x="28.6" y="225" width="0.2" height="15.0" fill="rgb(250,199,49)" rx="2" ry="2" />
<text text-anchor="" x="31.64" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ev_invoke_pending (3,961 samples, 23.44%)</title><rect x="28.8" y="225" width="276.6" height="15.0" fill="rgb(214,171,54)" rx="2" ry="2" />
<text text-anchor="" x="31.85" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ev_invoke_pending</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (21 samples, 0.12%)</title><rect x="1164.1" y="225" width="1.5" height="15.0" fill="rgb(221,145,35)" rx="2" ry="2" />
<text text-anchor="" x="1167.10" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libzmq.so.5.0.0] (21 samples, 0.12%)</title><rect x="1164.1" y="241" width="1.5" height="15.0" fill="rgb(205,213,47)" rx="2" ry="2" />
<text text-anchor="" x="1167.10" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (2 samples, 0.01%)</title><rect x="305.9" y="193" width="0.2" height="15.0" fill="rgb(232,45,2)" rx="2" ry="2" />
<text text-anchor="" x="308.94" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (118 samples, 0.70%)</title><rect x="1001.9" y="193" width="8.3" height="15.0" fill="rgb(228,7,28)" rx="2" ry="2" />
<text text-anchor="" x="1004.92" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sdsnewlen (5 samples, 0.03%)</title><rect x="303.9" y="145" width="0.4" height="15.0" fill="rgb(232,156,5)" rx="2" ry="2" />
<text text-anchor="" x="306.92" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (35 samples, 0.21%)</title><rect x="1177.6" y="209" width="2.4" height="15.0" fill="rgb(230,45,40)" rx="2" ry="2" />
<text text-anchor="" x="1180.57" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_execveat_common.isra.33 (3 samples, 0.02%)</title><rect x="1189.8" y="273" width="0.2" height="15.0" fill="rgb(250,36,28)" rx="2" ry="2" />
<text text-anchor="" x="1192.79" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::thread::_M_start_thread (2 samples, 0.01%)</title><rect x="307.3" y="177" width="0.1" height="15.0" fill="rgb(250,67,14)" rx="2" ry="2" />
<text text-anchor="" x="310.27" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::TaskExecutor::on_container_ready (253 samples, 1.50%)</title><rect x="10.8" y="209" width="17.6" height="15.0" fill="rgb(224,160,20)" rx="2" ry="2" />
<text text-anchor="" x="13.77" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::ThreadPool::create_queue (2 samples, 0.01%)</title><rect x="307.3" y="209" width="0.1" height="15.0" fill="rgb(233,61,29)" rx="2" ry="2" />
<text text-anchor="" x="310.27" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::internal::Stack&lt;rapidjson::CrtAllocator&gt;::Expand&lt;char&gt; (73 samples, 0.43%)</title><rect x="958.4" y="113" width="5.1" height="15.0" fill="rgb(216,45,3)" rx="2" ry="2" />
<text text-anchor="" x="961.36" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::Buffer&lt;char&gt;::append&lt;char&gt; (14 samples, 0.08%)</title><rect x="306.2" y="209" width="1.0" height="15.0" fill="rgb(254,89,21)" rx="2" ry="2" />
<text text-anchor="" x="309.22" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (100 samples, 0.59%)</title><rect x="358.0" y="241" width="7.0" height="15.0" fill="rgb(249,157,44)" rx="2" ry="2" />
<text text-anchor="" x="361.02" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::_M_emplace_back_aux&lt;char const*&gt; (3 samples, 0.02%)</title><rect x="304.3" y="177" width="0.2" height="15.0" fill="rgb(219,222,12)" rx="2" ry="2" />
<text text-anchor="" x="307.27" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-2.23.so] (2 samples, 0.01%)</title><rect x="10.6" y="273" width="0.2" height="15.0" fill="rgb(228,142,24)" rx="2" ry="2" />
<text text-anchor="" x="13.63" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;::Malloc (1,756 samples, 10.39%)</title><rect x="835.8" y="113" width="122.6" height="15.0" fill="rgb(234,206,19)" rx="2" ry="2" />
<text text-anchor="" x="838.76" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >rapidjson::Memo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (3 samples, 0.02%)</title><rect x="28.6" y="161" width="0.2" height="15.0" fill="rgb(233,115,28)" rx="2" ry="2" />
<text text-anchor="" x="31.64" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::rpc::RPCService::manage_service (289 samples, 1.71%)</title><rect x="307.2" y="241" width="20.2" height="15.0" fill="rgb(246,89,52)" rx="2" ry="2" />
<text text-anchor="" x="310.20" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (16,902 samples, 100%)</title><rect x="10.0" y="337" width="1180.0" height="15.0" fill="rgb(241,122,8)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libev.so.4.0.0] (3 samples, 0.02%)</title><rect x="28.6" y="193" width="0.2" height="15.0" fill="rgb(235,85,9)" rx="2" ry="2" />
<text text-anchor="" x="31.64" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (2 samples, 0.01%)</title><rect x="1168.3" y="193" width="0.1" height="15.0" fill="rgb(236,177,18)" rx="2" ry="2" />
<text text-anchor="" x="1171.29" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redox::Redox::processQueuedCommands (3,062 samples, 18.12%)</title><rect x="91.6" y="209" width="213.8" height="15.0" fill="rgb(233,15,42)" rx="2" ry="2" />
<text text-anchor="" x="94.61" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >redox::Redox::processQueuedC..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (5 samples, 0.03%)</title><rect x="1179.7" y="177" width="0.3" height="15.0" fill="rgb(212,60,10)" rx="2" ry="2" />
<text text-anchor="" x="1182.67" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-2.23.so] (2 samples, 0.01%)</title><rect x="10.6" y="193" width="0.2" height="15.0" fill="rgb(239,62,47)" rx="2" ry="2" />
<text text-anchor="" x="13.63" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::Logger::log_info_formatted&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (121 samples, 0.72%)</title><rect x="989.8" y="161" width="8.5" height="15.0" fill="rgb(242,22,13)" rx="2" ry="2" />
<text text-anchor="" x="992.84" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;int, std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_assign (140 samples, 0.83%)</title><rect x="1180.0" y="241" width="9.8" height="15.0" fill="rgb(241,16,53)" rx="2" ry="2" />
<text text-anchor="" x="1183.02" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (27 samples, 0.16%)</title><rect x="1165.6" y="225" width="1.9" height="15.0" fill="rgb(246,124,39)" rx="2" ry="2" />
<text text-anchor="" x="1168.57" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>report_window_details (5 samples, 0.03%)</title><rect x="305.5" y="241" width="0.4" height="15.0" fill="rgb(215,84,29)" rx="2" ry="2" />
<text text-anchor="" x="308.52" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>send_predictions (11,446 samples, 67.72%)</title><rect x="365.0" y="241" width="799.1" height="15.0" fill="rgb(221,96,31)" rx="2" ry="2" />
<text text-anchor="" x="368.01" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >send_predictions</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (1,746 samples, 10.33%)</title><rect x="836.5" y="81" width="121.9" height="15.0" fill="rgb(242,100,37)" rx="2" ry="2" />
<text text-anchor="" x="839.46" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>copy_user_enhanced_fast_string (2 samples, 0.01%)</title><rect x="1165.4" y="65" width="0.1" height="15.0" fill="rgb(242,97,11)" rx="2" ry="2" />
<text text-anchor="" x="1168.36" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Hashtable&lt;long, std::pair&lt;long const, clipper::CacheEntry&gt;, std::allocator&lt;std::pair&lt;long const, clipper::CacheEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2 samples, 0.01%)</title><rect x="1000.5" y="161" width="0.2" height="15.0" fill="rgb(218,70,5)" rx="2" ry="2" />
<text text-anchor="" x="1003.52" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::details::async_log_helper::worker_loop (18 samples, 0.11%)</title><rect x="305.9" y="257" width="1.3" height="15.0" fill="rgb(250,168,53)" rx="2" ry="2" />
<text text-anchor="" x="308.94" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::pattern_formatter::format (4 samples, 0.02%)</title><rect x="305.9" y="225" width="0.3" height="15.0" fill="rgb(232,117,6)" rx="2" ry="2" />
<text text-anchor="" x="308.94" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Function_handler&lt;void  (2 samples, 0.01%)</title><rect x="91.5" y="177" width="0.1" height="15.0" fill="rgb(209,127,31)" rx="2" ry="2" />
<text text-anchor="" x="94.47" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bench_utils::concatenate_cifar_datapoints (41 samples, 0.24%)</title><rect x="1165.6" y="241" width="2.8" height="15.0" fill="rgb(220,166,51)" rx="2" ry="2" />
<text text-anchor="" x="1168.57" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (62 samples, 0.37%)</title><rect x="1013.7" y="161" width="4.3" height="15.0" fill="rgb(253,155,18)" rx="2" ry="2" />
<text text-anchor="" x="1016.72" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, clipper::PredictTask&gt;, std::allocator&lt;std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, clipper::PredictTask&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;&amp;, clipper::PredictTask&gt; (4 samples, 0.02%)</title><rect x="1000.7" y="193" width="0.2" height="15.0" fill="rgb(233,137,43)" rx="2" ry="2" />
<text text-anchor="" x="1003.66" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (62 samples, 0.37%)</title><rect x="1013.7" y="177" width="4.3" height="15.0" fill="rgb(233,32,20)" rx="2" ry="2" />
<text text-anchor="" x="1016.72" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::detail::task_shared_state&lt;std::_Bind&lt;std::function&lt;void  (253 samples, 1.50%)</title><rect x="10.8" y="241" width="17.6" height="15.0" fill="rgb(233,91,20)" rx="2" ry="2" />
<text text-anchor="" x="13.77" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (15 samples, 0.09%)</title><rect x="326.2" y="145" width="1.0" height="15.0" fill="rgb(243,7,6)" rx="2" ry="2" />
<text text-anchor="" x="329.19" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (100 samples, 0.59%)</title><rect x="358.0" y="225" width="7.0" height="15.0" fill="rgb(208,36,43)" rx="2" ry="2" />
<text text-anchor="" x="361.02" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (1,991 samples, 11.78%)</title><rect x="91.8" y="81" width="139.0" height="15.0" fill="rgb(228,178,46)" rx="2" ry="2" />
<text text-anchor="" x="94.75" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (3 samples, 0.02%)</title><rect x="304.3" y="145" width="0.2" height="15.0" fill="rgb(223,1,46)" rx="2" ry="2" />
<text text-anchor="" x="307.27" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::internal::MemoryBuffer&lt;char, 500ul, std::allocator&lt;char&gt; &gt;::grow (14 samples, 0.08%)</title><rect x="306.2" y="193" width="1.0" height="15.0" fill="rgb(209,70,20)" rx="2" ry="2" />
<text text-anchor="" x="309.22" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SYSC_recvfrom (3 samples, 0.02%)</title><rect x="1165.3" y="161" width="0.2" height="15.0" fill="rgb(205,58,53)" rx="2" ry="2" />
<text text-anchor="" x="1168.29" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redox::Redox::createCommand&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (7 samples, 0.04%)</title><rect x="998.3" y="161" width="0.5" height="15.0" fill="rgb(222,117,24)" rx="2" ry="2" />
<text text-anchor="" x="1001.29" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (3 samples, 0.02%)</title><rect x="305.9" y="209" width="0.3" height="15.0" fill="rgb(242,150,25)" rx="2" ry="2" />
<text text-anchor="" x="308.94" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>realloc (192 samples, 1.14%)</title><rect x="963.5" y="113" width="13.4" height="15.0" fill="rgb(238,1,20)" rx="2" ry="2" />
<text text-anchor="" x="966.45" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>skb_copy_datagram_iter (3 samples, 0.02%)</title><rect x="1165.3" y="97" width="0.2" height="15.0" fill="rgb(243,26,8)" rx="2" ry="2" />
<text text-anchor="" x="1168.29" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redox::Redox::runEventLoop (3,964 samples, 23.45%)</title><rect x="28.6" y="257" width="276.8" height="15.0" fill="rgb(229,69,8)" rx="2" ry="2" />
<text text-anchor="" x="31.64" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >redox::Redox::runEventLoop</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (1,861 samples, 11.01%)</title><rect x="1034.2" y="193" width="129.9" height="15.0" fill="rgb(251,172,37)" rx="2" ry="2" />
<text text-anchor="" x="1037.17" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::basic_ptree (2 samples, 0.01%)</title><rect x="305.7" y="145" width="0.1" height="15.0" fill="rgb(207,37,19)" rx="2" ry="2" />
<text text-anchor="" x="308.66" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (6,735 samples, 39.85%)</title><rect x="365.0" y="225" width="470.2" height="15.0" fill="rgb(223,179,48)" rx="2" ry="2" />
<text text-anchor="" x="368.01" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.23.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sdsMakeRoomFor (1,991 samples, 11.78%)</title><rect x="91.8" y="113" width="139.0" height="15.0" fill="rgb(246,121,6)" rx="2" ry="2" />
<text text-anchor="" x="94.75" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sdsMakeRoomFor</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::basic_ptree (2 samples, 0.01%)</title><rect x="305.5" y="177" width="0.2" height="15.0" fill="rgb(251,40,22)" rx="2" ry="2" />
<text text-anchor="" x="308.52" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>boost::property_tree::basic_ptree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::basic_ptree (2 samples, 0.01%)</title><rect x="305.7" y="161" width="0.1" height="15.0" fill="rgb(239,166,15)" rx="2" ry="2" />
<text text-anchor="" x="308.66" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (117 samples, 0.69%)</title><rect x="1180.0" y="193" width="8.2" height="15.0" fill="rgb(253,145,25)" rx="2" ry="2" />
<text text-anchor="" x="1183.02" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>redox::Redox::submitToServer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3,062 samples, 18.12%)</title><rect x="91.6" y="193" width="213.8" height="15.0" fill="rgb(229,4,32)" rx="2" ry="2" />
<text text-anchor="" x="94.61" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >redox::Redox::submitToServer..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_create@@GLIBC_2.2.5 (2 samples, 0.01%)</title><rect x="327.2" y="193" width="0.2" height="15.0" fill="rgb(253,79,13)" rx="2" ry="2" />
<text text-anchor="" x="330.24" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>spdlog::sinks::ansicolor_sink::log (14 samples, 0.08%)</title><rect x="306.2" y="225" width="1.0" height="15.0" fill="rgb(224,16,18)" rx="2" ry="2" />
<text text-anchor="" x="309.22" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clipper::DoubleVector::serialize (231 samples, 1.37%)</title><rect x="10.9" y="177" width="16.1" height="15.0" fill="rgb(222,54,8)" rx="2" ry="2" />
<text text-anchor="" x="13.91" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (35 samples, 0.21%)</title><rect x="1177.6" y="225" width="2.4" height="15.0" fill="rgb(218,27,40)" rx="2" ry="2" />
<text text-anchor="" x="1180.57" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, redox::Command&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::allocator&lt;std::pair&lt;long const, redox::Command&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (6 samples, 0.04%)</title><rect x="998.3" y="145" width="0.4" height="15.0" fill="rgb(241,198,13)" rx="2" ry="2" />
<text text-anchor="" x="1001.29" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (5 samples, 0.03%)</title><rect x="303.9" y="113" width="0.4" height="15.0" fill="rgb(221,135,6)" rx="2" ry="2" />
<text text-anchor="" x="306.92" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.23.so] (100 samples, 0.59%)</title><rect x="358.0" y="209" width="7.0" height="15.0" fill="rgb(244,191,13)" rx="2" ry="2" />
<text text-anchor="" x="361.02" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
